{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "LS_DS_123_Make_Explanatory_Visualizations.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.3"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/echiyembekeza/DS-Unit-1-Sprint-2-Data-Wrangling-and-Storytelling/blob/master/LS_DS_123_Make_Explanatory_Visualizations.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "-8-trVo__vRE"
      },
      "source": [
        "_Lambda School Data Science_\n",
        "\n",
        "# Make Explanatory Visualizations\n",
        "\n",
        "### Objectives\n",
        "\n",
        "- identify misleading visualizations and how to fix them\n",
        "- use Seaborn to visualize distributions and relationships with continuous and discrete variables\n",
        "- add emphasis and annotations to transform visualizations from exploratory to explanatory\n",
        "- remove clutter from visualizations\n",
        "\n",
        "### Links\n",
        "\n",
        "- [How to Spot Visualization Lies](https://flowingdata.com/2017/02/09/how-to-spot-visualization-lies/)\n",
        "- [Visual Vocabulary - Vega Edition](http://ft.com/vocabulary)\n",
        "- [Choosing a Python Visualization Tool flowchart](http://pbpython.com/python-vis-flowchart.html)\n",
        "- [Searborn example gallery](http://seaborn.pydata.org/examples/index.html) & [tutorial](http://seaborn.pydata.org/tutorial.html)\n",
        "- [Strong Titles Are The Biggest Bang for Your Buck](http://stephanieevergreen.com/strong-titles/)\n",
        "- [Remove to improve (the data-ink ratio)](https://www.darkhorseanalytics.com/blog/data-looks-better-naked)\n",
        "- [How to Generate FiveThirtyEight Graphs in Python](https://www.dataquest.io/blog/making-538-plots/)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "s-24T844-8qv"
      },
      "source": [
        "# Avoid Misleading Visualizations\n",
        "\n",
        "Did you find/discuss any interesting misleading visualizations in your Walkie Talkie?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "Qzxt9ntsNjs0"
      },
      "source": [
        "## What makes a visualization misleading?\n",
        "\n",
        "[5 Ways Writers Use Misleading Graphs To Manipulate You](https://venngage.com/blog/misleading-graphs/)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "q7_DUiENNvxk"
      },
      "source": [
        "## Two y-axes\n",
        "\n",
        "<img src=\"https://kieranhealy.org/files/misc/two-y-by-four-sm.jpg\" width=\"800\">\n",
        " \n",
        " Other Examples: \n",
        " - [Spurious Correlations](https://tylervigen.com/spurious-correlations)\n",
        " - <https://blog.datawrapper.de/dualaxis/>\n",
        " - <https://kieranhealy.org/blog/archives/2016/01/16/two-y-axes/>\n",
        " - <http://www.storytellingwithdata.com/blog/2016/2/1/be-gone-dual-y-axis>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "oIijNBDMNv2k"
      },
      "source": [
        "##  Y-axis doesn't start at zero.\n",
        "\n",
        "<img src=\"https://i.pinimg.com/originals/22/53/a9/2253a944f54bb61f1983bc076ff33cdd.jpg\" width=\"600\">"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "ISB2p8vZNv6r"
      },
      "source": [
        "## Pie Charts are bad\n",
        "\n",
        "<img src=\"https://i1.wp.com/flowingdata.com/wp-content/uploads/2009/11/Fox-News-pie-chart.png?fit=620%2C465&ssl=1\" width=\"600\">"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "67CsAzu1NwBJ"
      },
      "source": [
        "## Pie charts that omit data are extra bad\n",
        " \n",
        "- A guy makes a misleading chart that goes viral\n",
        "\n",
        " What does this chart imply at first glance? You don't want your user to have to do a lot of work in order to be able to interpret you graph correctly. You want that first-glance conclusions to be the correct ones.\n",
        "\n",
        " <img src=\"https://pbs.twimg.com/media/DiaiTLHWsAYAEEX?format=jpg&name=medium\" width='600'>\n",
        " \n",
        " <https://twitter.com/michaelbatnick/status/1019680856837849090?lang=en>\n",
        " \n",
        "- It gets picked up by overworked journalists (assuming incompetency before malice)\n",
        " \n",
        " <https://www.marketwatch.com/story/this-1-chart-puts-mega-techs-trillions-of-market-value-into-eye-popping-perspective-2018-07-18>\n",
        " \n",
        "- Even after the chart's implications have been refuted, it's hard a bad (although compelling) visualization from being passed around.\n",
        "\n",
        " <https://www.linkedin.com/pulse/good-bad-pie-charts-karthik-shashidhar/>\n",
        "\n",
        "**[\"yea I understand a pie chart was probably not the best choice to present this data.\"](https://twitter.com/michaelbatnick/status/1037036440494985216)**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "FYXmlToEOOTC"
      },
      "source": [
        "## Pie Charts that compare unrelated things are next-level extra bad\n",
        "\n",
        "<img src=\"http://www.painting-with-numbers.com/download/document/186/170403+Legalizing+Marijuana+Graph.jpg\" width=\"600\">\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "IwtMQpY_QFUw"
      },
      "source": [
        "## Be careful about how you use volume to represent quantities:\n",
        "\n",
        "radius vs diameter vs volume\n",
        "\n",
        "<img src=\"https://static1.squarespace.com/static/5bfc8dbab40b9d7dd9054f41/t/5c32d86e0ebbe80a25873249/1546836082961/5474039-25383714-thumbnail.jpg?format=1500w\" width=\"600\">"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "tTuAWjSBRsc7"
      },
      "source": [
        "## Don't cherrypick timelines or specific subsets of your data:\n",
        "\n",
        "<img src=\"https://wattsupwiththat.com/wp-content/uploads/2019/02/Figure-1-1.png\" width=\"600\">\n",
        "\n",
        "Look how specifically the writer has selected what years to show in the legend on the right side.\n",
        "\n",
        "<https://wattsupwiththat.com/2019/02/24/strong-arctic-sea-ice-growth-this-year/>\n",
        "\n",
        "Try the tool that was used to make the graphic for yourself\n",
        "\n",
        "<http://nsidc.org/arcticseaicenews/charctic-interactive-sea-ice-graph/>\n",
        "                                                                                           "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "Xs13S7p4Srme"
      },
      "source": [
        "## Use Relative units rather than Absolute Units\n",
        "\n",
        "<img src=\"https://imgs.xkcd.com/comics/heatmap_2x.png\" width=\"600\">"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "CIMt5OiuTlrr"
      },
      "source": [
        "## Avoid 3D graphs unless having the extra dimension is effective\n",
        "\n",
        "Usually you can Split 3D graphs into multiple 2D graphs\n",
        "\n",
        "3D graphs that are interactive can be very cool. (See Plotly and Bokeh)\n",
        "\n",
        "<img src=\"https://thumbor.forbes.com/thumbor/1280x868/https%3A%2F%2Fblogs-images.forbes.com%2Fthumbnails%2Fblog_1855%2Fpt_1855_811_o.jpg%3Ft%3D1339592470\" width=\"600\">"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "GATMu9IqUlIj"
      },
      "source": [
        "## Don't go against typical conventions\n",
        "\n",
        "<img src=\"http://www.callingbullshit.org/twittercards/tools_misleading_axes.png\" width=\"600\">"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "g6bKgZ0m_ynS"
      },
      "source": [
        "# Tips for choosing an appropriate visualization:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "WtBsVnO4VHiJ"
      },
      "source": [
        "## Use Appropriate \"Visual Vocabulary\"\n",
        "\n",
        "[Visual Vocabulary - Vega Edition](http://ft.com/vocabulary)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "H_QM9FHqVT7T"
      },
      "source": [
        "## What are the properties of your data?\n",
        "- Is your primary variable of interest continuous or discrete?\n",
        "- Is in wide or long (tidy) format?\n",
        "- Does your visualization involve multiple variables?\n",
        "- How many dimensions do you need to include on your plot?\n",
        "\n",
        "Can you express the main idea of your visualization in a single sentence?\n",
        "\n",
        "How hard does your visualization make the user work in order to draw the intended conclusion?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "5EqXxnJeB89_"
      },
      "source": [
        "## Which Visualization tool is most appropriate? \n",
        "\n",
        "[Choosing a Python Visualization Tool flowchart](http://pbpython.com/python-vis-flowchart.html)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "5_na7Oy3NGKA"
      },
      "source": [
        "# Making Explanatory Visualizations with Seaborn"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "ORUwQD6F-VYg"
      },
      "source": [
        "Today we will reproduce this [example by FiveThirtyEight:](https://fivethirtyeight.com/features/al-gores-new-movie-exposes-the-big-flaw-in-online-movie-ratings/)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "ya_w5WORGs-n",
        "outputId": "2c05ae6d-b9c1-4178-c9ec-3dcade0c80cb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 355
        }
      },
      "source": [
        "from IPython.display import display, Image\n",
        "\n",
        "url = 'https://fivethirtyeight.com/wp-content/uploads/2017/09/mehtahickey-inconvenient-0830-1.png'\n",
        "example = Image(url=url, width=400)\n",
        "\n",
        "display(example)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<img src=\"https://fivethirtyeight.com/wp-content/uploads/2017/09/mehtahickey-inconvenient-0830-1.png\" width=\"400\"/>"
            ],
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "HP4DALiRG3sC"
      },
      "source": [
        "Using this data: https://github.com/fivethirtyeight/data/tree/master/inconvenient-sequel"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "HioPkYtUG03B"
      },
      "source": [
        "Links\n",
        "- [Strong Titles Are The Biggest Bang for Your Buck](http://stephanieevergreen.com/strong-titles/)\n",
        "- [Remove to improve (the data-ink ratio)](https://www.darkhorseanalytics.com/blog/data-looks-better-naked)\n",
        "- [How to Generate FiveThirtyEight Graphs in Python](https://www.dataquest.io/blog/making-538-plots/)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "0w_iMnQ6-VoQ"
      },
      "source": [
        "## Make prototypes\n",
        "\n",
        "This  helps us understand the problem"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "5uz0eEaEN-GO",
        "outputId": "715a1bb8-1100-41b3-9dd6-a29d54ef4021",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        }
      },
      "source": [
        "%matplotlib inline\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "\n",
        "plt.style.use('fivethirtyeight')\n",
        "\n",
        "fake = pd.Series([38, 3, 2, 1, 2, 4, 6, 5, 5, 33], \n",
        "                 index=range(1,11))\n",
        "\n",
        "fake.plot.bar(color='C1', width=0.9);"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "KZ0VLOV8OyRr",
        "outputId": "c215d38d-52ef-4462-d2e5-0cb1fceab050",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        }
      },
      "source": [
        "fake2 = pd.Series(\n",
        "    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "     2, 2, 2, \n",
        "     3, 3, 3,\n",
        "     4, 4,\n",
        "     5, 5, 5,\n",
        "     6, 6, 6, 6,\n",
        "     7, 7, 7, 7, 7,\n",
        "     8, 8, 8, 8,\n",
        "     9, 9, 9, 9, \n",
        "     10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10])\n",
        "\n",
        "fake2.value_counts().sort_index().plot.bar(color='C1', width=0.9);"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "5Dprme0kNlNx",
        "outputId": "6f8bd179-13aa-417c-9e05-6cc35c0e2089",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 355
        }
      },
      "source": [
        "display(example)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<img src=\"https://fivethirtyeight.com/wp-content/uploads/2017/09/mehtahickey-inconvenient-0830-1.png\" width=\"400\"/>"
            ],
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "mZb3UZWO-q05"
      },
      "source": [
        "## Annotate with text"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "CcUB4U27PEsi",
        "colab": {},
        "outputId": "ce1c208a-ce11-431d-af3d-8092f16c8bc9"
      },
      "source": [
        "counts = [38, 3, 2, 1, 2, 4, 6, 5, 5, 33]\n",
        "data_list = []\n",
        "\n",
        "for i, c in enumerate(counts, 1):\n",
        "    data_list = data_list + [i]*c\n",
        "    \n",
        "print(data_list) #wanted to see what would be printed out"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "hLBgvmIRP1N7",
        "colab": {},
        "outputId": "6b284247-d680-4aa8-ab2e-d07f6480f66c"
      },
      "source": [
        "fake2 = pd.Series(data_list)\n",
        "fake2.hist() #just wanted to check"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x119defc50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "BLJPvW3tS-cF",
        "colab": {}
      },
      "source": [
        "plt.style.use?"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "f6U1vswr_uWp",
        "outputId": "483137e4-4ec9-4aea-86a2-0c8e307ba8f2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        }
      },
      "source": [
        "plt.style.use('fivethirtyeight')\n",
        "fake2.value_counts().sort_index().plot.bar(color='#ed713a', width=0.9, rot=0);\n",
        "\n",
        "plt.text(x=-1,\n",
        "         y=50, \n",
        "         fontsize=16,\n",
        "         fontweight='bold',\n",
        "         s=\"'An Inconvenient Sequel: Truth To Power' is divisive\")\n",
        "\n",
        "plt.text(x=-1,\n",
        "         y=45,\n",
        "         fontsize=16,\n",
        "         s=\"IMDb ratings for the film as of Aug. 29\")\n",
        "\n",
        "plt.xlabel('Rating')\n",
        "plt.ylabel('Percent of Total Votes')\n",
        "plt.yticks(range(0, 50, 10));"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nQkRERJLDgEJERESSw4BCREREksOAQkRERJLDgEJERESSw4BCREREksOAQkRERJLDgEJERESSw4BC\nREREksOAQkRERJLDgEJERESSw4BCREREksOAQkRERJLDgEJERESSw4BCREREksOAQkRERJLDgEJE\nRESSw4BCREREksOAQkRERJLDgEJERESSw4BCREREksOAQkRERJLDgEJERESSw4BCREREksOAQkRE\nRJLDgEJERESSw4BCREREksOAQkRERJLDgEJERESSw4BCREREksOAQkRERJJT6AElMTERXbt2xdGj\nRxEWFoYRI0Zg2LBhmDx5MpKTkwu7HCIiIpKgQg8onp6eMDY2BgCsW7cOPXr0wIYNG2Bubo7Dhw8X\ndjlEREQkQYUaUAIDA/HixQu0bNkSAODr64vWrVsDAFq1aoWbN28WZjlEREQkUYUaUP7880/8/PPP\nwteJiYnQ1dUFAJQqVQqRkZGFWQ4RERFJVKEFFC8vL9StWxeVKlXKcX1GRkZhlUJEREQSp11YDV2+\nfBnBwcG4fPkywsPDoaOjA319fSQmJkJPTw8REREoU6ZMYZVDREREElZoPSjz58/H1q1b4enpiU6d\nOmHIkCFQKBQ4d+4cAODs2bNo1qxZYZXzxQICAoq6hC/ytdcPfP3HwPqLFusvWl97/cDXfwxSr79I\nn4Pi5uYGLy8vDBs2DHFxcXB2di7KcoiIiEgiCm2IJys3Nzfh/6tWrSqKEoiIiEjC+CRZIiIikhwG\nFCIiIpIcBhQiIiKSHAYUIiIikhwGFCIiIpIcBhQiIiKSHAYUIiIikhwGFCIiIpIcBhQiIiKSHAYU\nIiIikhwGFCIiIpKcIvlbPIUpbdYPatlvVQBpativfKa3GvZKRET0dWEPChEREUkOAwoRERFJDgMK\nERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoR\nERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChER\nEUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERER\nSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJ\nDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSY52URdAREREuUub9YNa9lsVQJoa9iuf6V0g+2EP\nChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMK\nERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoRERFJDgMKERERSQ4DChEREUkOAwoR\nERFJDgMKERERSQ4DChEREUkOAwoRERFJjnZhNpaYmIhZs2YhKioKycnJGDx4MKysrDBz5kykpaXB\n1NQUs2bNgq6ubmGWRURERBJTqAHFx8cHtWvXxoABAxAaGooxY8agfv366NGjB5ycnLBmzRocPnwY\nPXr0KMyyiIiISGJED/FERkYiMTFR+Pru3bvYu3cv/P39RTf2/fffY8CAAQCAsLAwlC1bFr6+vmjd\nujUAoFWrVrh586bo/REREdG3SVQPyq1btzBhwgSsXbsWdevWxdGjRzFnzhzo6+sjOTkZixcvRqtW\nrUQ3OmTIEISHh2PZsmUYM2aMMKRTqlQpREZGitpHQECAqO2qiq5KGsQe19fWlrp87cfA+osW6y9a\nX3v9QOEcw7d8HatRo0au60QFlPXr16NTp06wtrYGAGzcuBFdunTB5MmTsW3bNmzdujVfAWXTpk3w\n9/fHzJkzkZGRISzP+v9PyeugskoTvUdpEHtcXyogIKDQ2lKXr/0YWH/RYv1F62uvHyi8Y9DU65io\nIZ6nT5+iV69e0NLSwrNnzxAaGorevXsDABwdHfHixQtRjT169AhhYWEAACsrK6SlpaF48eLC0FFE\nRATKlCnzOcdBRERE3xBRASUjI0MYhrl58ybKli2LqlUzO51kMhmSk5NFNXbnzh3s2LEDAPD27Vu8\nf/8eCoUC586dAwCcPXsWzZo1y/dBEBER0bdFVECpXLkyzp49i7i4OBw4cAC2trbCujt37qBChQqi\nGuvWrRuioqIwbNgwTJgwAf/73//g5uYGLy8vDBs2DHFxcXB2dv68IyEiIqJvhqg5KAMGDMC0adOw\ncuVKlChRAq6urgAAX19fLF26FEOHDhXVmJ6eHubOnZtt+apVq/JRMhEREX3rRAUUR0dHVK1aFf7+\n/mjQoAHKlSsHADAyMsKoUaPQs2dPtRZJREREmkX0g9osLS1haWmpsszKygpWVlYFXhQRERFpNtEP\n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\ngIbNpUGyEydOVFRUlK5cuaI+ffrI4XDo4MGDunHjhk6ePKn169fXdU4AANCAuFRQhg0bpkaNGmnX\nrl3avn27JCkpKUkdO3ZUTEyMXnvttToNCQAAGhaX50EJDw9XeHi4ioqKVFhYqGbNmsnLy6suswEA\ngAbqXwvKrVu3dPv2bQUGBio4OFje3t7y9vauj2wAAKCBqrKglJSUKDIyUunp6c51ffv21QcffCAf\nH596CQcAABqmKp/i2b17t06fPq05c+YoLi5Oixcv1qVLlxQfH1+f+QAAQANUZUE5evSoFixYoGnT\npql///6aPHmyoqOj9f3336u0tLTGO7x69arGjRunL774QpJ0584dzZkzR7NmzdLKlStVUlJS420D\nAICnQ5UFJScnR7179660rmfPniotLdW9e/dqtLPi4mJt3Lix0na3bdumCRMmaMeOHQoKClJKSkqN\ntg0AAJ4eVRaU0tJS+fr6VlpntVrVpEmTGl9B8fDwUHx8vPz9/Z3rzp49q4EDB0qSQkNDlZGRUaNt\nAwCAp4fLjxnXys6sVlmtlXdpt9vl6ekpSfLz81N+fn59RgIAACZUZUGxWCyyWCz1mUXl5eUuv/fK\nlSsuva9DTcMYxNXjcrd91RV3PwbyG4v8xnL3/FL9HMPTfB7r3Llzla9VWVDKy8s1adKkv5WU4uJi\nTZs2TY0a/e/ukMViUWpqqsuB/p+Xl5fsdruaNm2qvLw8tW7d2qU/908H9f8cNUplHFeP60lduXKl\n3vZVV9z9GMhvLPIby93zS/V3DA31PFZlQRk5cmSt7ODfhISE6Pjx4xo+fLjS0tLUt2/fetkvAAAw\nryoLyurVq2t9Z5mZmUpISFBOTo6sVqvS0tK0du1arV27VsnJyWrbtq1GjRpV6/sFAADupV4HyXbt\n2lWffvrp39Zv2bKlPmMAAACTq/IxYwAAAKNQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQ\nUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAA\ngOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQUAAAgOlQ\nUAAAgOlQUAAAgOlYjQ4AAE87R/SIWt9mB0mOWt+q1DjquzrYKlB9XEEBAACmQ0EBAACmQ0EBAACm\n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\nzFRCQoJycnJktVqVlpam2NhYtznZHzt2TDabrdLAwDVr1qhNmzYGpnLd+PHjtW7dOs2aNUt//PGH\n3nvvPbf9z8FdhYWFKTIyUunp6SotLdXy5cvd6kQZEBCgwYMHOweXLl261O0+Q/n5+WrVqpXRMWpk\n3LhxiomJ0ezZs+VwOLRixQqjI1VLp06dVFZWpmnTpsnT09NZVszuceeutWvXau3atUpOTlbbtm1N\nd8uQqe4BAIDpuNePDQAAoEGgoAAAANOhoAAAANOhoAAAANOhoAAAANPhMWMANRYdHa3Dhw//bb2P\nj4+6deumiIgI9enT54n2MWfOHBUVFbnVbKMAnhwFBcATad68uQ4cOOBcLi8vV25urpKSkrRo0SLF\nx8erX79+Lm9vwoQJWrRokfNbqmNjY005DTeAusUtHgBPxGKxyN/f3/mrdevWeumll7Ru3ToFBAQ4\nZ/51hc1m040bNyqta9GihdvN9ArgyVFQANQJq9WqDh066M6dO5Kk0tJSbdu2Ta+//rr69eunYcOG\nafny5crOzpZU8d0y4eHhkqQlS5Zo7Nixkipu8URERDi3GxISon379ikxMVGjRo3SwIEDNX36dGVm\nZlbaf2JiokaOHKmwsDDNnj1bWVlZGjx4sBISEurj8AE8IQoKgDpRVlam69evO79GYffu3dqzZ48W\nLFigr7/+WnFxccrNzdWyZcskST169FBsbKykirEtu3fvrnLbhw4dks1m0+bNm7V161bdu3dPUVFR\nzte/+uorbdu2TSNGjND+/fs1btw4rV69WsXFxXV3wABqFWNQANQ6m82mHTt26Pbt21qyZImkirEl\nQ4cOVXBwsCQpMDBQY8aMUWxsrPLz8+Xv76/mzZtLknx9ff/xu2aaNGni3K4kjRgxQomJiSosLJSv\nr68OHz6szp07a968eZKk4OBg2e12rV+/vq4OGUAto6AAeCIFBQUaNGiQc7m8vFx2u10dOnTQunXr\nFBoaKkny9PTUkSNHlJ6erry8PP35559yOBzObfj7+7u8z+7du1dafjRG5eHDh/L19dWtW7ecg2wf\neZQDgHugoAB4Is2bN9euXbucy1lZWVq2bJnziskjq1ev1qlTpzR//nz16tVLTZs21fHjx7Vly5Zq\n79Pb27vSssVikSTn0z4FBQV/ew8DbQH3QkEB8EQsFouCgoKcy0FBQRo9erS2bt2qsLAwBQYGqrCw\nUCdOnNDUqVM1efJk53vLysrqJJOnp6fsdnuldQUFBXWyLwB1g0GyAGrdggUL5OnpqQ0bNkiqeIKn\nvLxcLVq0cL7H4XAoNTVVkmp9npOgoCBdvHix0rq0tLRa3QeAukVBAVDrWrRooYULF+rkyZNKTU1V\ny5YtFRQUpO+++05XrlzR5cuXtXTpUr388suSpHPnzqmwsFDNmjWTJGVkZOjSpUs1Li5DhgzRpUuX\ntGfPHt24cUNHjx7V0aNHa+34ANQ9CgqAOjFy5Ej16tVLcXFxevDggWJiYuTp6anp06drxYoVevXV\nV50l5eOPP1Zqaqo6d+6swYMHKzk5WYsWLarxLaCpU6dq0qRJ2rdvnyIiInTkyBGtWbNGUsXtHwDm\nZ7HZbMwhDeCp4nA49ODBg0pPBl27dk0TJ05UZGSkRo8ebWA6AK7gCgqAp84333yjESNGKCkpSdnZ\n2bp48aJiY2PVqlWrSo9EAzAvrqAAeCp9/vnnSk5O1u3bt+Xj46OuXbtq3rx56tSpk9HRALiAggIA\nAEyHWzwAAMB0KCgAAMB0KCgAAMB0KCgAAMB0KCgAAMB0KCgAAMB0/gvxnAX87Tx8uAAAAABJRU5E\nrkJggg==\n",
            "text/plain": [
              "<Figure size 576x396 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "x8jRZkpB_MJ6"
      },
      "source": [
        "## Reproduce with real data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "3SOHJckDUPI8",
        "colab": {}
      },
      "source": [
        "df = pd.read_csv('https://raw.githubusercontent.com/fivethirtyeight/data/master/inconvenient-sequel/ratings.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "cDltXxhC_yG-",
        "outputId": "bf7ee844-2798-4200-afd7-b9fc95298ae2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "df.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(80053, 27)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "dQW-1GAeTpBI",
        "outputId": "c6dbf5ca-e37d-4d27-b8c9-7b18cb26e184",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        }
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>timestamp</th>\n",
              "      <th>respondents</th>\n",
              "      <th>category</th>\n",
              "      <th>link</th>\n",
              "      <th>average</th>\n",
              "      <th>mean</th>\n",
              "      <th>median</th>\n",
              "      <th>1_votes</th>\n",
              "      <th>2_votes</th>\n",
              "      <th>3_votes</th>\n",
              "      <th>...</th>\n",
              "      <th>1_pct</th>\n",
              "      <th>2_pct</th>\n",
              "      <th>3_pct</th>\n",
              "      <th>4_pct</th>\n",
              "      <th>5_pct</th>\n",
              "      <th>6_pct</th>\n",
              "      <th>7_pct</th>\n",
              "      <th>8_pct</th>\n",
              "      <th>9_pct</th>\n",
              "      <th>10_pct</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-07-17 12:28:32.785639</td>\n",
              "      <td>402</td>\n",
              "      <td>Males</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-male</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2</td>\n",
              "      <td>197</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>49.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>33.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-07-17 12:28:33.025600</td>\n",
              "      <td>78</td>\n",
              "      <td>Females</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-fe...</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.7</td>\n",
              "      <td>10</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>20.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>5.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>62.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-07-17 12:28:33.273919</td>\n",
              "      <td>4</td>\n",
              "      <td>Aged under 18</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-age_1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-07-17 12:28:33.495325</td>\n",
              "      <td>4</td>\n",
              "      <td>Males under 18</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-ma...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-07-17 12:28:33.722849</td>\n",
              "      <td>130</td>\n",
              "      <td>Aged 18-29</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-age_2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>6.5</td>\n",
              "      <td>9</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>31.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.3</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>49.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 27 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                    timestamp  respondents        category  \\\n",
              "0  2017-07-17 12:28:32.785639          402           Males   \n",
              "1  2017-07-17 12:28:33.025600           78         Females   \n",
              "2  2017-07-17 12:28:33.273919            4   Aged under 18   \n",
              "3  2017-07-17 12:28:33.495325            4  Males under 18   \n",
              "4  2017-07-17 12:28:33.722849          130      Aged 18-29   \n",
              "\n",
              "                                                link  average  mean  median  \\\n",
              "0   http://www.imdb.com/title/tt6322922/ratings-male      4.6   5.0       2   \n",
              "1  http://www.imdb.com/title/tt6322922/ratings-fe...      6.9   7.7      10   \n",
              "2  http://www.imdb.com/title/tt6322922/ratings-age_1      4.2   4.2       3   \n",
              "3  http://www.imdb.com/title/tt6322922/ratings-ma...      4.2   4.2       3   \n",
              "4  http://www.imdb.com/title/tt6322922/ratings-age_2      6.3   6.5       9   \n",
              "\n",
              "   1_votes  2_votes  3_votes  ...  1_pct  2_pct  3_pct  4_pct  5_pct  6_pct  \\\n",
              "0      197        7        7  ...   49.0    1.7    1.7    0.7    1.7    1.7   \n",
              "1       16        1        0  ...   20.5    1.3    0.0    1.3    1.3    0.0   \n",
              "2        2        0        0  ...   50.0    0.0    0.0    0.0   25.0    0.0   \n",
              "3        2        0        0  ...   50.0    0.0    0.0    0.0   25.0    0.0   \n",
              "4       41        0        3  ...   31.5    0.0    2.3    0.8    1.5    2.3   \n",
              "\n",
              "   7_pct  8_pct  9_pct  10_pct  \n",
              "0    2.7    2.0    5.0    33.6  \n",
              "1    3.8    5.1    3.8    62.8  \n",
              "2    0.0    0.0    0.0    25.0  \n",
              "3    0.0    0.0    0.0    25.0  \n",
              "4    4.6    3.1    4.6    49.2  \n",
              "\n",
              "[5 rows x 27 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "9XqAugpOT53V",
        "outputId": "17074ca7-d3aa-453e-e8cc-aa01129415b7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 896
        }
      },
      "source": [
        "df.sample(1) #this provides us with a sample line of number of lines as presented in the parentheses"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>timestamp</th>\n",
              "      <th>respondents</th>\n",
              "      <th>category</th>\n",
              "      <th>link</th>\n",
              "      <th>average</th>\n",
              "      <th>mean</th>\n",
              "      <th>median</th>\n",
              "      <th>1_votes</th>\n",
              "      <th>2_votes</th>\n",
              "      <th>3_votes</th>\n",
              "      <th>...</th>\n",
              "      <th>1_pct</th>\n",
              "      <th>2_pct</th>\n",
              "      <th>3_pct</th>\n",
              "      <th>4_pct</th>\n",
              "      <th>5_pct</th>\n",
              "      <th>6_pct</th>\n",
              "      <th>7_pct</th>\n",
              "      <th>8_pct</th>\n",
              "      <th>9_pct</th>\n",
              "      <th>10_pct</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5989</th>\n",
              "      <td>2017-07-30 17:00:05.898015</td>\n",
              "      <td>217</td>\n",
              "      <td>Non-US users</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-in...</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9</td>\n",
              "      <td>56</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>25.8</td>\n",
              "      <td>1.8</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>4.1</td>\n",
              "      <td>6.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>45.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1 rows × 27 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                       timestamp  respondents      category  \\\n",
              "5989  2017-07-30 17:00:05.898015          217  Non-US users   \n",
              "\n",
              "                                                   link  average  mean  \\\n",
              "5989  http://www.imdb.com/title/tt6322922/ratings-in...      6.2   6.6   \n",
              "\n",
              "      median  1_votes  2_votes  3_votes  ...  1_pct  2_pct  3_pct  4_pct  \\\n",
              "5989       9       56        4        7  ...   25.8    1.8    3.2    1.8   \n",
              "\n",
              "      5_pct  6_pct  7_pct  8_pct  9_pct  10_pct  \n",
              "5989    2.3    4.1    6.0    3.2    6.0    45.6  \n",
              "\n",
              "[1 rows x 27 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L1mpkNBola_f",
        "colab_type": "code",
        "colab": {},
        "outputId": "abbff801-3fbf-4974-9c1c-83504d7d7721"
      },
      "source": [
        "df['timestamp']#this was an object, we need to make it date/time"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        2017-07-17 12:28:32.785639\n",
              "1        2017-07-17 12:28:33.025600\n",
              "2        2017-07-17 12:28:33.273919\n",
              "3        2017-07-17 12:28:33.495325\n",
              "4        2017-07-17 12:28:33.722849\n",
              "5        2017-07-17 12:28:33.970009\n",
              "6        2017-07-17 12:28:34.199847\n",
              "7        2017-07-17 12:28:34.381001\n",
              "8        2017-07-17 12:28:34.590224\n",
              "9        2017-07-17 12:28:34.807101\n",
              "10       2017-07-17 12:28:35.055251\n",
              "11       2017-07-17 12:28:35.326192\n",
              "12       2017-07-17 12:28:35.610367\n",
              "13       2017-07-17 12:28:35.837364\n",
              "14       2017-07-17 12:28:36.023600\n",
              "15       2017-07-17 12:28:36.286318\n",
              "16       2017-07-17 12:28:36.493883\n",
              "17       2017-07-17 12:28:36.697246\n",
              "18       2017-07-17 12:34:17.770310\n",
              "19       2017-07-17 12:34:17.963319\n",
              "20       2017-07-17 12:34:18.189098\n",
              "21       2017-07-17 12:34:18.378583\n",
              "22       2017-07-17 12:34:18.596179\n",
              "23       2017-07-17 12:34:18.818522\n",
              "24       2017-07-17 12:34:19.004680\n",
              "25       2017-07-17 12:34:19.225794\n",
              "26       2017-07-17 12:34:19.408369\n",
              "27       2017-07-17 12:34:19.605521\n",
              "28       2017-07-17 12:34:19.804607\n",
              "29       2017-07-17 12:34:19.995748\n",
              "                    ...            \n",
              "80023    2017-08-29 23:00:03.683160\n",
              "80024    2017-08-29 23:00:03.924760\n",
              "80025    2017-08-29 23:00:04.189034\n",
              "80026    2017-08-29 23:00:04.381826\n",
              "80027    2017-08-29 23:00:04.619175\n",
              "80028    2017-08-29 23:00:04.820031\n",
              "80029    2017-08-29 23:00:05.028872\n",
              "80030    2017-08-29 23:00:05.231674\n",
              "80031    2017-08-29 23:00:05.442596\n",
              "80032    2017-08-29 23:00:05.634805\n",
              "80033    2017-08-29 23:00:05.829558\n",
              "80034    2017-08-29 23:10:02.207706\n",
              "80035    2017-08-29 23:10:02.398710\n",
              "80036    2017-08-29 23:10:02.622019\n",
              "80037    2017-08-29 23:10:02.908857\n",
              "80038    2017-08-29 23:10:03.088635\n",
              "80039    2017-08-29 23:10:03.288272\n",
              "80040    2017-08-29 23:10:03.501039\n",
              "80041    2017-08-29 23:10:03.725960\n",
              "80042    2017-08-29 23:10:03.942442\n",
              "80043    2017-08-29 23:10:04.147698\n",
              "80044    2017-08-29 23:10:04.406759\n",
              "80045    2017-08-29 23:10:04.603751\n",
              "80046    2017-08-29 23:10:04.905270\n",
              "80047    2017-08-29 23:10:05.172451\n",
              "80048    2017-08-29 23:10:05.369510\n",
              "80049    2017-08-29 23:10:05.598331\n",
              "80050    2017-08-29 23:10:05.794141\n",
              "80051    2017-08-29 23:10:06.022268\n",
              "80052    2017-08-29 23:10:06.218251\n",
              "Name: timestamp, Length: 80053, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cxmxqFt5la_n",
        "colab_type": "code",
        "colab": {},
        "outputId": "1366783b-e98d-4cfd-849f-36d56f1e5db6"
      },
      "source": [
        "df.sample(1).T #transpose the data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>69895</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>timestamp</th>\n",
              "      <td>2017-08-26 06:10:03.874750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>respondents</th>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>category</th>\n",
              "      <td>Females Aged 18-29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>link</th>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-fe...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>average</th>\n",
              "      <td>7.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>7.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>median</th>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1_votes</th>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2_votes</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3_votes</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4_votes</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5_votes</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6_votes</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7_votes</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8_votes</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9_votes</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10_votes</th>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1_pct</th>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2_pct</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3_pct</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4_pct</th>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5_pct</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6_pct</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7_pct</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8_pct</th>\n",
              "      <td>7.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9_pct</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10_pct</th>\n",
              "      <td>55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                         69895\n",
              "timestamp                           2017-08-26 06:10:03.874750\n",
              "respondents                                                 40\n",
              "category                                    Females Aged 18-29\n",
              "link         http://www.imdb.com/title/tt6322922/ratings-fe...\n",
              "average                                                    7.1\n",
              "mean                                                       7.8\n",
              "median                                                      10\n",
              "1_votes                                                      4\n",
              "2_votes                                                      0\n",
              "3_votes                                                      2\n",
              "4_votes                                                      1\n",
              "5_votes                                                      2\n",
              "6_votes                                                      2\n",
              "7_votes                                                      2\n",
              "8_votes                                                      3\n",
              "9_votes                                                      2\n",
              "10_votes                                                    22\n",
              "1_pct                                                       10\n",
              "2_pct                                                        0\n",
              "3_pct                                                        5\n",
              "4_pct                                                      2.5\n",
              "5_pct                                                        5\n",
              "6_pct                                                        5\n",
              "7_pct                                                        5\n",
              "8_pct                                                      7.5\n",
              "9_pct                                                        5\n",
              "10_pct                                                      55"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "ju7S3WhIUHHY",
        "outputId": "04c917b0-19d3-44c3-a337-50690d276e0b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        }
      },
      "source": [
        "df['timestamp'] =  pd.to_datetime(df['timestamp'])\n",
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>timestamp</th>\n",
              "      <th>respondents</th>\n",
              "      <th>category</th>\n",
              "      <th>link</th>\n",
              "      <th>average</th>\n",
              "      <th>mean</th>\n",
              "      <th>median</th>\n",
              "      <th>1_votes</th>\n",
              "      <th>2_votes</th>\n",
              "      <th>3_votes</th>\n",
              "      <th>...</th>\n",
              "      <th>1_pct</th>\n",
              "      <th>2_pct</th>\n",
              "      <th>3_pct</th>\n",
              "      <th>4_pct</th>\n",
              "      <th>5_pct</th>\n",
              "      <th>6_pct</th>\n",
              "      <th>7_pct</th>\n",
              "      <th>8_pct</th>\n",
              "      <th>9_pct</th>\n",
              "      <th>10_pct</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-07-17 12:28:32.785639</td>\n",
              "      <td>402</td>\n",
              "      <td>Males</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-male</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2</td>\n",
              "      <td>197</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>49.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>33.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-07-17 12:28:33.025600</td>\n",
              "      <td>78</td>\n",
              "      <td>Females</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-fe...</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.7</td>\n",
              "      <td>10</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>20.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>5.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>62.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-07-17 12:28:33.273919</td>\n",
              "      <td>4</td>\n",
              "      <td>Aged under 18</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-age_1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-07-17 12:28:33.495325</td>\n",
              "      <td>4</td>\n",
              "      <td>Males under 18</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-ma...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-07-17 12:28:33.722849</td>\n",
              "      <td>130</td>\n",
              "      <td>Aged 18-29</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-age_2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>6.5</td>\n",
              "      <td>9</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>31.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.3</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>49.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 27 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                   timestamp  respondents        category  \\\n",
              "0 2017-07-17 12:28:32.785639          402           Males   \n",
              "1 2017-07-17 12:28:33.025600           78         Females   \n",
              "2 2017-07-17 12:28:33.273919            4   Aged under 18   \n",
              "3 2017-07-17 12:28:33.495325            4  Males under 18   \n",
              "4 2017-07-17 12:28:33.722849          130      Aged 18-29   \n",
              "\n",
              "                                                link  average  mean  median  \\\n",
              "0   http://www.imdb.com/title/tt6322922/ratings-male      4.6   5.0       2   \n",
              "1  http://www.imdb.com/title/tt6322922/ratings-fe...      6.9   7.7      10   \n",
              "2  http://www.imdb.com/title/tt6322922/ratings-age_1      4.2   4.2       3   \n",
              "3  http://www.imdb.com/title/tt6322922/ratings-ma...      4.2   4.2       3   \n",
              "4  http://www.imdb.com/title/tt6322922/ratings-age_2      6.3   6.5       9   \n",
              "\n",
              "   1_votes  2_votes  3_votes  ...  1_pct  2_pct  3_pct  4_pct  5_pct  6_pct  \\\n",
              "0      197        7        7  ...   49.0    1.7    1.7    0.7    1.7    1.7   \n",
              "1       16        1        0  ...   20.5    1.3    0.0    1.3    1.3    0.0   \n",
              "2        2        0        0  ...   50.0    0.0    0.0    0.0   25.0    0.0   \n",
              "3        2        0        0  ...   50.0    0.0    0.0    0.0   25.0    0.0   \n",
              "4       41        0        3  ...   31.5    0.0    2.3    0.8    1.5    2.3   \n",
              "\n",
              "   7_pct  8_pct  9_pct  10_pct  \n",
              "0    2.7    2.0    5.0    33.6  \n",
              "1    3.8    5.1    3.8    62.8  \n",
              "2    0.0    0.0    0.0    25.0  \n",
              "3    0.0    0.0    0.0    25.0  \n",
              "4    4.6    3.1    4.6    49.2  \n",
              "\n",
              "[5 rows x 27 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "h4EBWDTFUHKi",
        "colab": {}
      },
      "source": [
        "df = df.set_index('timestamp')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "bUrxxYoYU-Dr",
        "outputId": "92188abb-e476-478b-f6d7-94dc00d1f878",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 461
        }
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>respondents</th>\n",
              "      <th>category</th>\n",
              "      <th>link</th>\n",
              "      <th>average</th>\n",
              "      <th>mean</th>\n",
              "      <th>median</th>\n",
              "      <th>1_votes</th>\n",
              "      <th>2_votes</th>\n",
              "      <th>3_votes</th>\n",
              "      <th>4_votes</th>\n",
              "      <th>...</th>\n",
              "      <th>1_pct</th>\n",
              "      <th>2_pct</th>\n",
              "      <th>3_pct</th>\n",
              "      <th>4_pct</th>\n",
              "      <th>5_pct</th>\n",
              "      <th>6_pct</th>\n",
              "      <th>7_pct</th>\n",
              "      <th>8_pct</th>\n",
              "      <th>9_pct</th>\n",
              "      <th>10_pct</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>timestamp</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2017-07-17 12:28:32.785639</th>\n",
              "      <td>402</td>\n",
              "      <td>Males</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-male</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2</td>\n",
              "      <td>197</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>49.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.7</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>33.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-07-17 12:28:33.025600</th>\n",
              "      <td>78</td>\n",
              "      <td>Females</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-fe...</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.7</td>\n",
              "      <td>10</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>20.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>5.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>62.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-07-17 12:28:33.273919</th>\n",
              "      <td>4</td>\n",
              "      <td>Aged under 18</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-age_1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-07-17 12:28:33.495325</th>\n",
              "      <td>4</td>\n",
              "      <td>Males under 18</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-ma...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-07-17 12:28:33.722849</th>\n",
              "      <td>130</td>\n",
              "      <td>Aged 18-29</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-age_2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>6.5</td>\n",
              "      <td>9</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>31.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.3</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>49.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 26 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                            respondents        category  \\\n",
              "timestamp                                                 \n",
              "2017-07-17 12:28:32.785639          402           Males   \n",
              "2017-07-17 12:28:33.025600           78         Females   \n",
              "2017-07-17 12:28:33.273919            4   Aged under 18   \n",
              "2017-07-17 12:28:33.495325            4  Males under 18   \n",
              "2017-07-17 12:28:33.722849          130      Aged 18-29   \n",
              "\n",
              "                                                                         link  \\\n",
              "timestamp                                                                       \n",
              "2017-07-17 12:28:32.785639   http://www.imdb.com/title/tt6322922/ratings-male   \n",
              "2017-07-17 12:28:33.025600  http://www.imdb.com/title/tt6322922/ratings-fe...   \n",
              "2017-07-17 12:28:33.273919  http://www.imdb.com/title/tt6322922/ratings-age_1   \n",
              "2017-07-17 12:28:33.495325  http://www.imdb.com/title/tt6322922/ratings-ma...   \n",
              "2017-07-17 12:28:33.722849  http://www.imdb.com/title/tt6322922/ratings-age_2   \n",
              "\n",
              "                            average  mean  median  1_votes  2_votes  3_votes  \\\n",
              "timestamp                                                                      \n",
              "2017-07-17 12:28:32.785639      4.6   5.0       2      197        7        7   \n",
              "2017-07-17 12:28:33.025600      6.9   7.7      10       16        1        0   \n",
              "2017-07-17 12:28:33.273919      4.2   4.2       3        2        0        0   \n",
              "2017-07-17 12:28:33.495325      4.2   4.2       3        2        0        0   \n",
              "2017-07-17 12:28:33.722849      6.3   6.5       9       41        0        3   \n",
              "\n",
              "                            4_votes  ...  1_pct  2_pct  3_pct  4_pct  5_pct  \\\n",
              "timestamp                            ...                                      \n",
              "2017-07-17 12:28:32.785639        3  ...   49.0    1.7    1.7    0.7    1.7   \n",
              "2017-07-17 12:28:33.025600        1  ...   20.5    1.3    0.0    1.3    1.3   \n",
              "2017-07-17 12:28:33.273919        0  ...   50.0    0.0    0.0    0.0   25.0   \n",
              "2017-07-17 12:28:33.495325        0  ...   50.0    0.0    0.0    0.0   25.0   \n",
              "2017-07-17 12:28:33.722849        1  ...   31.5    0.0    2.3    0.8    1.5   \n",
              "\n",
              "                            6_pct  7_pct  8_pct  9_pct  10_pct  \n",
              "timestamp                                                       \n",
              "2017-07-17 12:28:32.785639    1.7    2.7    2.0    5.0    33.6  \n",
              "2017-07-17 12:28:33.025600    0.0    3.8    5.1    3.8    62.8  \n",
              "2017-07-17 12:28:33.273919    0.0    0.0    0.0    0.0    25.0  \n",
              "2017-07-17 12:28:33.495325    0.0    0.0    0.0    0.0    25.0  \n",
              "2017-07-17 12:28:33.722849    2.3    4.6    3.1    4.6    49.2  \n",
              "\n",
              "[5 rows x 26 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l46YWM4tla_6",
        "colab_type": "code",
        "colab": {},
        "outputId": "219b72a4-3eb3-4eb8-a1f9-6c17b438c268"
      },
      "source": [
        "df.tail()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>respondents</th>\n",
              "      <th>category</th>\n",
              "      <th>link</th>\n",
              "      <th>average</th>\n",
              "      <th>mean</th>\n",
              "      <th>median</th>\n",
              "      <th>1_votes</th>\n",
              "      <th>2_votes</th>\n",
              "      <th>3_votes</th>\n",
              "      <th>4_votes</th>\n",
              "      <th>...</th>\n",
              "      <th>1_pct</th>\n",
              "      <th>2_pct</th>\n",
              "      <th>3_pct</th>\n",
              "      <th>4_pct</th>\n",
              "      <th>5_pct</th>\n",
              "      <th>6_pct</th>\n",
              "      <th>7_pct</th>\n",
              "      <th>8_pct</th>\n",
              "      <th>9_pct</th>\n",
              "      <th>10_pct</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>timestamp</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2017-08-29 23:10:05.369510</th>\n",
              "      <td>8</td>\n",
              "      <td>IMDb staff</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-im...</td>\n",
              "      <td>8.4</td>\n",
              "      <td>7.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.5</td>\n",
              "      <td>12.5</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>12.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-08-29 23:10:05.598331</th>\n",
              "      <td>41</td>\n",
              "      <td>Top 1000 voters</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-to...</td>\n",
              "      <td>4.6</td>\n",
              "      <td>4.7</td>\n",
              "      <td>5</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>26.8</td>\n",
              "      <td>9.8</td>\n",
              "      <td>4.9</td>\n",
              "      <td>4.9</td>\n",
              "      <td>12.2</td>\n",
              "      <td>9.8</td>\n",
              "      <td>12.2</td>\n",
              "      <td>2.4</td>\n",
              "      <td>2.4</td>\n",
              "      <td>14.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-08-29 23:10:05.794141</th>\n",
              "      <td>925</td>\n",
              "      <td>US users</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-usa</td>\n",
              "      <td>4.8</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4</td>\n",
              "      <td>405</td>\n",
              "      <td>34</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>43.8</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6.5</td>\n",
              "      <td>28.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-08-29 23:10:06.022268</th>\n",
              "      <td>565</td>\n",
              "      <td>Non-US users</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings-in...</td>\n",
              "      <td>6.4</td>\n",
              "      <td>6.5</td>\n",
              "      <td>7</td>\n",
              "      <td>129</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>22.8</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1.4</td>\n",
              "      <td>5.7</td>\n",
              "      <td>8.3</td>\n",
              "      <td>9.2</td>\n",
              "      <td>6.5</td>\n",
              "      <td>6.2</td>\n",
              "      <td>36.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-08-29 23:10:06.218251</th>\n",
              "      <td>2662</td>\n",
              "      <td>IMDb users</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7</td>\n",
              "      <td>1021</td>\n",
              "      <td>69</td>\n",
              "      <td>38</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>38.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.5</td>\n",
              "      <td>33.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 26 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                            respondents         category  \\\n",
              "timestamp                                                  \n",
              "2017-08-29 23:10:05.369510            8       IMDb staff   \n",
              "2017-08-29 23:10:05.598331           41  Top 1000 voters   \n",
              "2017-08-29 23:10:05.794141          925         US users   \n",
              "2017-08-29 23:10:06.022268          565     Non-US users   \n",
              "2017-08-29 23:10:06.218251         2662       IMDb users   \n",
              "\n",
              "                                                                         link  \\\n",
              "timestamp                                                                       \n",
              "2017-08-29 23:10:05.369510  http://www.imdb.com/title/tt6322922/ratings-im...   \n",
              "2017-08-29 23:10:05.598331  http://www.imdb.com/title/tt6322922/ratings-to...   \n",
              "2017-08-29 23:10:05.794141    http://www.imdb.com/title/tt6322922/ratings-usa   \n",
              "2017-08-29 23:10:06.022268  http://www.imdb.com/title/tt6322922/ratings-in...   \n",
              "2017-08-29 23:10:06.218251        http://www.imdb.com/title/tt6322922/ratings   \n",
              "\n",
              "                            average  mean  median  1_votes  2_votes  3_votes  \\\n",
              "timestamp                                                                      \n",
              "2017-08-29 23:10:05.369510      8.4   7.2       8        1        0        0   \n",
              "2017-08-29 23:10:05.598331      4.6   4.7       5       11        4        2   \n",
              "2017-08-29 23:10:05.794141      4.8   5.0       4      405       34       20   \n",
              "2017-08-29 23:10:06.022268      6.4   6.5       7      129       11       10   \n",
              "2017-08-29 23:10:06.218251      5.4   5.6       7     1021       69       38   \n",
              "\n",
              "                            4_votes  ...  1_pct  2_pct  3_pct  4_pct  5_pct  \\\n",
              "timestamp                            ...                                      \n",
              "2017-08-29 23:10:05.369510        0  ...   12.5    0.0    0.0    0.0    0.0   \n",
              "2017-08-29 23:10:05.598331        2  ...   26.8    9.8    4.9    4.9   12.2   \n",
              "2017-08-29 23:10:05.794141        8  ...   43.8    3.7    2.2    0.9    1.0   \n",
              "2017-08-29 23:10:06.022268        8  ...   22.8    1.9    1.8    1.4    5.7   \n",
              "2017-08-29 23:10:06.218251       25  ...   38.4    2.6    1.4    0.9    2.1   \n",
              "\n",
              "                            6_pct  7_pct  8_pct  9_pct  10_pct  \n",
              "timestamp                                                       \n",
              "2017-08-29 23:10:05.369510   12.5   12.5   25.0   25.0    12.5  \n",
              "2017-08-29 23:10:05.598331    9.8   12.2    2.4    2.4    14.6  \n",
              "2017-08-29 23:10:05.794141    3.2    5.8    5.0    6.5    28.0  \n",
              "2017-08-29 23:10:06.022268    8.3    9.2    6.5    6.2    36.1  \n",
              "2017-08-29 23:10:06.218251    4.1    5.8    5.5    5.5    33.7  \n",
              "\n",
              "[5 rows x 26 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "9LxBK1nbVBws",
        "outputId": "a19e955e-1a1d-4c4b-c59b-cfe850c986c7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        }
      },
      "source": [
        "df['category'].value_counts()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Aged 30-44            4216\n",
              "Females Aged 45+      4216\n",
              "IMDb staff            4216\n",
              "Aged 45+              4216\n",
              "US users              4216\n",
              "Females Aged 18-29    4216\n",
              "Males                 4216\n",
              "Males Aged 30-44      4216\n",
              "Top 1000 voters       4216\n",
              "IMDb users            4216\n",
              "Aged 18-29            4216\n",
              "Females               4216\n",
              "Non-US users          4216\n",
              "Males under 18        4216\n",
              "Males Aged 45+        4216\n",
              "Aged under 18         4216\n",
              "Females Aged 30-44    4216\n",
              "Males Aged 18-29      4216\n",
              "Females under 18      4165\n",
              "Name: category, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "myReZMFFVaiF",
        "outputId": "0b7485cd-c483-4a50-8081-93e76048af1f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "df_imdb = df[df['category'] == 'IMDb users']\n",
        "df_imdb.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4216, 26)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "p_QDQgNjVqn6",
        "outputId": "7765c48a-f230-4c20-f298-3bbaf099637a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 372
        }
      },
      "source": [
        "lastday = df['2017-08-29']\n",
        "lastday[lastday['category'] == 'IMDb users']['respondents'].plot()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f17bdc37a20>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nTGTTpk1kZmYyZswY/P39WbVqVbXrX3vtNX71q19x++23c+DAAf72t7+xfPnyJuuQiIhIc9LuGPvV\nGUIGDx5Mv379AAgICKC8vJz09HRmzpwJQFxc3FWvb9u2LcXFxQCcPXuWtm3bOtpmERERl6HdMfYz\nmM1ma90vu+TyqEdWVhY33XQTe/fuJTQ0lEcffZSgoCDGjh1LbGwsx48f54YbbuDOO++koqKC+Ph4\nLl68SGlpKWvWrCEiIqJe75eTk2N3x0RERJrDhK9ac6LipyWW7w0rp0Pren+0urWoqKirfr3eIWTH\njh2sX7+e5ORkpk2bxowZM7j55ptZu3YtpaWlzJ49m40bNzJ+/HgMBgP33nsvjz/+OBkZGRgMBqZP\nn056ejrvvfceS5YsaZTOubOcnJw6/89zZ57ef1ANQDUA1QBcvwbdX/uRMxd++ig9PKUDoa2Njfoe\nrl4De9Vrd0xGRgYpKSksXboUf39/QkJCGDJkCAAxMTHk5uYCMHnyZPz8/DCZTAwbNozDhw9z4MAB\nYmJiALjuuuvIyspqoq6IiIg0Py1MtV+dIaSkpITk5GRefPFFgoKCABg1ahQZGRkAZGVlERkZydGj\nR5k/fz5Wq5XKykoOHDjANddcQ+fOnfnuu+8AOHjwIF26dGnC7oiIiDSfKquV85bqz7XWwtR6q3Nh\n6rZt2zCbzcydO9f2XEJCAkuXLiUtLQ2TycTChQsJDQ0lPDyc+Ph4vLy8iI2NpV+/foSHh5OYmMhH\nH30EwMMPP9x0vREREWlGtUZBjAa8DAoh9VVnCImLi/vZHTBJSUm1nnvggQdqPRcWFsbSpUvtbJ6I\niIjrqnlQmaZiGkYnpoqIiNhJ941xjEKIiIiInbQo1TEKISIiInb6uTUhUn8KISIiInbSdIxjFEJE\nRETspIWpjlEIERERsZNGQhyjECIiImInhRDHKISIiIjYSbtjHKMQIiIiYqeaIyHaHdMwCiEiIiJ2\nqjkSoumYhlEIERERsZOmYxyjECIiImKnMktVtccKIQ2jECIiImInTcc4RiFERETETlqY6hiFEBER\nETvVHgnRx2pDqFoiIiJ20sJUxyiEiIiI2KlM945xiEKIiIiInbQw1TEKISIiInaqNR2jhakNohAi\nIiJiJ93AzjEKISIiInYq15oQh3jX50XLly8nMzMTi8VCfHw8sbGxJCQkkJeXh5+fH0lJSQQGBhIT\n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\nkZ2dzZYtW4BLW7EqKysJDQ0FWv4ZD1dSDVQDUA1ANQDVwNP77yweW72wsDCsVit5eXlERkbSpUsX\nevfuzXvvvcfjjz/OokWLOHz4MAcPHrTd5fDySX/uQjVQDUA1ANUAVANP77+zeOyaEIDMzEw++eQT\nJkyYQO/evSktLWXGjBmsW7eOkydPkpWVxcCBA1v0scJ1UQ1UA1ANQDUA1cDT++8MHjsSAjBw4EC+\n+uorPvroI/z9/blw4QL9+/fHx8eHLl260KVLF2c3scmpBqoBqAagGoBq4On9dwaPHgkBKC0t5f33\n32fnzp2UlpZy++23M378eGc3q1mpBqoBqAagGoBq4On9b24eH0IuO3LkCJ07d/boRUaqgWoAqgGo\nBqAaeHr/m4tCiIiIiDiFx27RFREREedSCBERERGnUAgRERERp1AIEREREadQCBERERGnUAgR8TB7\n9+5lxIgRpKenO7spIuLhFEJEPMC//vUv7rrrLgAGDBjA1q1bue6665zcqksOHDhguxeHiHgWncIi\n4gEOHDhg+28fHx/CwsKc2JrqvvnmG2c3QUScRIeVibi5WbNmsW/fPtvjBQsW8OSTT/LCCy8QGxvL\n6tWr2bBhA3//+99JSkri8OHDhIeH88gjjxAaGsqzzz7Lv//9b8LCwvjf//1ffv3rX9u+18GDB1m9\nejXff/89ZWVlREVFcd999zFs2DDba7Zv38769ev54YcfAOjRowczZ85kxIgRLFq0iPfff9/22nvu\nuYeZM2dy9OhRXnrpJfbu3Ut5eTnh4eHceuutTJ8+HS8vL1u/TCYTN998M6tXr+bUqVNER0ezePFi\nvvvuO/7+979z/Phxevbsybx58+jRo4ftOi8vL373u9/xt7/9jR9//JGOHTty7733akRGpJlpOkbE\nzT377LP079+fqKgotm7dSkhISK3XWCwWXnrpJf7yl7+QkpJCq1atWLx4MUuWLGHGjBm88sorhIeH\nk5iYyPnz5wE4duwY9913H+Xl5bz44oukpKTQrVs3HnzwQf79738DcPToUebOncuvf/1rXn31VVJS\nUoiOjmbOnDkUFhby8MMPM27cOAIDA9m6dSt//OMfsVqtPPTQQxQWFrJy5Urefvtt7r33XtatW8cb\nb7xRrd3/+c9/SE9P5/nnn+eFF14gOzubJ554gs2bN5OYmMiKFSsoLCzkr3/9a7Xrjhw5wrvvvsui\nRYtITU2lR48eLFiwgJycnCb6f0FEfo5CiIibCwoKwsfHB6PRSFhYGL6+vrVeU1FRwR133MGAAQPo\n2bMnEyZM4MSJE8TFxTFixAi6du3K73//e0pKSjh27BiALRA899xz9O3blx49evDEE0/Qrl07Xnnl\nFQCys7OxWCz89re/JSIigm7duvHQQw+xatUqAgIC8Pf3x9fXF4PBQFhYGH5+fgAkJyfzwgsv0Lt3\nbzp27Mgtt9xCdHQ0GRkZ1dp96tQpnnjiCXr06MGIESMYOnQo3333HfPmzaNXr14MGDCAX/3qV3z/\n/ffVrisqKmLevHn07duXnj178sQTTwCwbdu2xi2+iFyV1oSICAC9e/e2/XdgYCAAvXr1qvXcuXPn\ngEtrOfr27Wt7HsDb25tBgwbx7bffApcWwQYHB3PfffcxadIkhg8fTlRUFAMGDPjFdhgMBs6dO8dL\nL73Et99+y9mzZ6mqquLChQvV2gPQqVMnAgICqrWxbdu2hIeH254LCgri7Nmz1a7r2LFjtde0bduW\njh07kp+fX0eVRKQxKYSICAAmk8n23waD4Refs1ovLSMrKSkhJyeHsWPHVvs+Fy9exMfHB4Dw8HBS\nUlJ49dVXee2111i6dCkdO3Zk+vTp3HbbbT/bjsLCQmbNmkXnzp155JFH6Ny5M0ajkQULFmCxWKq9\ntnXr1tUeGwyGam3+JVcGlyv7XzOsiEjTUggREbsEBAQQGhrKggULrvq6Tp068eijj/Loo49y+PBh\n3nzzTZ566ik6derE8OHDa73+008/paysjMWLF9O9e3fb8+fOnbNN1ziqrKzsZ5+78v1EpOlpTYiI\n2KV///4cO3aM9u3b06VLF9v/DAYD7dq1Ay6tCdm9e7ftmsvrRtq0aUN2drbt+cujKwCVlZXApWmU\ny7799lvb7prGkJ+fz/Hjx22Pz5w5Q0FBgUKISDNTCBHxAAEBAeTn5/Ptt99y4sSJRvmed9xxB+fP\nn+f//b//x8GDB8nPz2fLli1MnTqVV199Fbi0buT//u//eO+998jPzyc/P58NGzZw/vx5Bg0aZGtb\nSUkJX331Ffn5+fTv3x+A1NRU8vPz+fTTT3n22WeJjY3lxx9/5OjRo7agYq+goCASExM5ePAghw4d\n4umnn8ZgMPCb3/zGsaKISINoOkbEA9xxxx189913zJo1i/vuu69Rvmfnzp1ZvXo1L730En/+85+5\ncOECnTt3ZsaMGUyZMgWAyZMnc/78eV555RWWLFmCj48P3bt355lnnqFfv34A3HbbbXz++efMmTOH\n3/3ud/zlL3/hz3/+M2+++Sbvvvsuffv25cknn8RsNvPNN99w99138+abbzrU9vDwcCZNmkRCQgL5\n+fl06NCBp556ioiICIfrIiL1p8PKRMSjzJo1i7KyMl5++WVnN0XE42k6RkRERJxCIUREREScQtMx\nIiIi4hQaCRERERGnUAgRERERp1AIEREREadQCBERERGnUAgRERERp1AIEREREaf4/1Chspp5rpfD\nAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 576x396 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "UrV_g8U7WYvc",
        "outputId": "7673bdac-f95f-4c88-c30d-bec27d031ee5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 196
        }
      },
      "source": [
        "# final = df.tail(1)\n",
        "\n",
        "df = df.sort_index()\n",
        "df_imdb = df[df['category'] == 'IMDb users']\n",
        "final = df_imdb.tail(1)\n",
        "final"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>respondents</th>\n",
              "      <th>category</th>\n",
              "      <th>link</th>\n",
              "      <th>average</th>\n",
              "      <th>mean</th>\n",
              "      <th>median</th>\n",
              "      <th>1_votes</th>\n",
              "      <th>2_votes</th>\n",
              "      <th>3_votes</th>\n",
              "      <th>4_votes</th>\n",
              "      <th>...</th>\n",
              "      <th>1_pct</th>\n",
              "      <th>2_pct</th>\n",
              "      <th>3_pct</th>\n",
              "      <th>4_pct</th>\n",
              "      <th>5_pct</th>\n",
              "      <th>6_pct</th>\n",
              "      <th>7_pct</th>\n",
              "      <th>8_pct</th>\n",
              "      <th>9_pct</th>\n",
              "      <th>10_pct</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>timestamp</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2017-08-29 23:10:06.218251</th>\n",
              "      <td>2662</td>\n",
              "      <td>IMDb users</td>\n",
              "      <td>http://www.imdb.com/title/tt6322922/ratings</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7</td>\n",
              "      <td>1021</td>\n",
              "      <td>69</td>\n",
              "      <td>38</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>38.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.5</td>\n",
              "      <td>33.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1 rows × 26 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                            respondents    category  \\\n",
              "timestamp                                             \n",
              "2017-08-29 23:10:06.218251         2662  IMDb users   \n",
              "\n",
              "                                                                   link  \\\n",
              "timestamp                                                                 \n",
              "2017-08-29 23:10:06.218251  http://www.imdb.com/title/tt6322922/ratings   \n",
              "\n",
              "                            average  mean  median  1_votes  2_votes  3_votes  \\\n",
              "timestamp                                                                      \n",
              "2017-08-29 23:10:06.218251      5.4   5.6       7     1021       69       38   \n",
              "\n",
              "                            4_votes  ...  1_pct  2_pct  3_pct  4_pct  5_pct  \\\n",
              "timestamp                            ...                                      \n",
              "2017-08-29 23:10:06.218251       25  ...   38.4    2.6    1.4    0.9    2.1   \n",
              "\n",
              "                            6_pct  7_pct  8_pct  9_pct  10_pct  \n",
              "timestamp                                                       \n",
              "2017-08-29 23:10:06.218251    4.1    5.8    5.5    5.5    33.7  \n",
              "\n",
              "[1 rows x 26 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "MvL3bLHQW8X8",
        "outputId": "2a84285c-69e0-42c8-ce7f-baaf59a99925",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 149
        }
      },
      "source": [
        "columns = ['%s_pct' % i for i in range(1, 11)]\n",
        "#columns = ['{}_pct'.format(i) for i in range(1, 11)]\n",
        "#columns = [f'{i}_pct' for i in range(1, 11)] # python3 only\n",
        "final[columns]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>1_pct</th>\n",
              "      <th>2_pct</th>\n",
              "      <th>3_pct</th>\n",
              "      <th>4_pct</th>\n",
              "      <th>5_pct</th>\n",
              "      <th>6_pct</th>\n",
              "      <th>7_pct</th>\n",
              "      <th>8_pct</th>\n",
              "      <th>9_pct</th>\n",
              "      <th>10_pct</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>timestamp</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2017-08-29 23:10:06.218251</th>\n",
              "      <td>38.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.5</td>\n",
              "      <td>33.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                            1_pct  2_pct  3_pct  4_pct  5_pct  6_pct  7_pct  \\\n",
              "timestamp                                                                     \n",
              "2017-08-29 23:10:06.218251   38.4    2.6    1.4    0.9    2.1    4.1    5.8   \n",
              "\n",
              "                            8_pct  9_pct  10_pct  \n",
              "timestamp                                         \n",
              "2017-08-29 23:10:06.218251    5.5    5.5    33.7  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "zf2W6vBrYl16",
        "colab": {}
      },
      "source": [
        "data = final[columns].T\n",
        "data.index = range(1, 11)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "BplzovE_Y25M",
        "outputId": "d5de49e5-9292-4d3f-8726-181f54da6948",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 477
        }
      },
      "source": [
        "plt.style.use('fivethirtyeight')\n",
        "\n",
        "data.plot.bar(color='#ed713a', width=0.9, rot=0, legend=False);\n",
        "\n",
        "plt.text(x=-2,\n",
        "         y=50, \n",
        "         fontsize=16,\n",
        "         fontweight='bold',\n",
        "         s=\"'An Inconvenient Sequel: Truth To Power' is divisive\")\n",
        "\n",
        "plt.text(x=-2,\n",
        "         y=45,\n",
        "         fontsize=16,\n",
        "         s=\"IMDb ratings for the film as of Aug. 29\")\n",
        "\n",
        "plt.xlabel('Rating')\n",
        "plt.ylabel('Percent of Total Votes')\n",
        "plt.yticks(range(0, 50, 10));"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIiImK3FIRERETEbikIiYiIiN1S\nEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIiImK3FIRERETEbikIiYiIiN1S\nEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIiImK3FIRERETEbikIiYiIiN1S\nEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIiImK3FIRERETEbmXaIBQXF0fr\n1q1Zu3Ytly9fplevXnTv3p2BAwdy+/Zta5cnIiIiNiDTBqG5c+eSK1cuAGbMmEHbtm2ZNWsWxYsX\nZ/Xq1VauTkRERGxBpgxC586d4+zZs9StWxeAgwcPUr9+fQDq1avH/v37rVmeiIiI2IhMGYS+//57\nPvnkE+PnuLg4smbNCkDevHmJiIiwVmnpFhwcbO0Snojqty7Vb13Pe/3w/B+D6reu56F+Z2sXkNEC\nAgKoUqUKRYsWTXV9UlJSutqzhV+iLdTwJFS/dal+63re64fn/xhUv3VZu/7y5cs/dH2mC0I7d+4k\nJCSEnTt3cuXKFbJkyUL27NmJi4vDxcWF8PBw8ufPn+b2HnUCn7bg4GCr1/AkVL91qX7ret7rh+f/\nGFS/dT0P9We6IDRmzBjj/zNnzqRIkSIcOXKEbdu28cYbb7B161ZeffVVK1YoIiIitiJTzhG6X48e\nPQgICKB79+5ER0fj4+Nj7ZJERETEBmS6HqHkevToYfx/6tSpVqxEREREbJFd9AiJiIiIpEZBSERE\nROyWgpCIiIjYLQUhERERsVsKQiIiImK3FIRERETEbikIiYiIiN3K1PcRepYSh7/5VNotAyRmcJtO\nw9ZlcIsiIiLPJ/UIiYiIiN1SEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIi\nImK3FIRERETEbikIiYiIiN1SEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIi\nImK3FIRERETEbikIiYiIiN1SEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIi\nImK3FIRERETEbikIiYiIiN1SEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLQUhERERsVsKQiIi\nImK3FIRERETEbikIiYiIiN1SEBIRERG7pSAkIiIidktBSEREROyWgpCIiIjYLWdrFyAiIiLWlzj8\nzQxvswyQmOGtgtOwdRnWlnqERERExG4pCImIiIjdUhASERERu6UgJCIiInZLQUhERETsloKQiIiI\n2C0FIREREbFbCkIiIiJitxSERERExG4pCImIiIjdUhASERERu6UgJCIiInZLQUhERETsloKQiIiI\n2C0FIREREbFbCkIiIiJitxSERERExG4pCImIiIjdUhASERERu6UgJCIiInZLQUhERETsloKQiIiI\n2C0FIREREbFbCkIiIiJit5ytXUBGi4uLY/jw4URGRnL79m26dOlChQoVGDZsGImJieTLl4/hw4eT\nNWtWa5cqIiIiVmZzQSgiIgJXV1dcXFwAOHz4MEFBQdSoUYMKFSo88vHbt2+nUqVKdOrUibCwMPr1\n60f16tVp27Yt3t7eTJ8+ndWrV9O2bdunfSgiIiJi42xqaOzAgQO0bt2aU6dOAbB27Vp69uzJ9OnT\n6dy5Mzt27HhkG6+//jqdOnUC4PLlyxQoUICDBw9Sv359AOrVq8f+/fuf3kGIiIjIc8OmgtDMmTNp\n0aIFHh4eAMyePZtWrVrx+++/06tXLxYsWJDmtrp27cqQIUPw8/MjLi7OGArLmzcvERERT6V+ERER\neb7Y1NDYqVOnGDRoEI6Ojpw+fZqwsDDeffddABo3bsyPP/6Y5rbmzJlDUFAQw4YNIykpyVie/P9p\nERwcnKbtyqSrVetK6zE9r/vLaKrfulS/9T3vx6D60yazfo6VL1/+oettKgglJSUZPTf79++nQIEC\nlClz71fj4ODA7du3H9nG8ePHyZs3LwULFqRChQokJiaSI0cO4uLicHFxITw8nPz586e5pkedQLPE\nNLdofWk9powQHBz8TPeX0VS/dal+63vej0H1p529fo7Z1NBYiRIl2Lp1K9HR0axcuRJPT09j3aFD\nhyhcuPAj2zh06BCLFi0C4OrVq9y8eROTycS2bdsA2Lp1K6+++urTOQARERF5rthUEOrUqRNTp06l\nSZMmREVF0aFDBwAOHjzIhAkTaNGixSPbaNOmDZGRkXTv3p1PP/2U//znP/To0YOAgAC6d+9OdHQ0\nPj4+T/tQRERE5DlgU0NjjRs3pkyZMsbl8gULFgTAzc2NPn368Pbbbz+yDRcXF0aNGpVi+dSpUzO8\nXhEREXm+2VQQAihdujSlS5e2WFahQoU03UNIREREJD1samgM4PTp0wwfPpz3338fb29vQkJCiIuL\nS9el8yIiIiJpYVNB6NChQ3Tu3Jm//vqL8uXLExcXB9y72/T8+fNZsWKFlSsUERGRzMSmgtD06dPx\n9vbml19+YcSIETg73xu5K1asGH5+fvzyyy9WrlBEREQyE5sKQkFBQXTo0MEIQMm99NJLXLx40QpV\niYiISGZlU0Eoe/bsJCamfkun69ev6y/Gi4iISIayqSBUsWJFJk+ezM2bNy2WJyQksGDBAqpVq2al\nykRERCQzsqnL57t3707fvn3x8fGhcuXK3L59m9GjR3P+/Hlu3rzJjBkzrF2iiIiIZCI21SNUpUoV\nfvrpJ15//XUiIyPJnz8/N27cwMvLix9//FH3EhIREZEMZVM9QuHh4ZQoUYKBAwemWBcTE8Px48ep\nVKmSFSoTERGRzMimeoR8fX25du1aquvCwsLo16/fM65IREREMjOb6BGaPn06AElJScydO5fs2bNb\nrE9KSiIwMJC7d+9aozwRERHJpGwiCEVGRvLPP//g4ODA8uXLU90mR44cdO3a9RlXJiIiIpmZTQSh\nwYMHA1C7dm3Wrl1L3rx5U2zj5OT0rMsSERGRTM4mgpDZrl27LALP3bt3cXS0qWlMIiIikonYVBBy\ncnJiy5YtLFu2jJMnTxIfH0/27NmpXLkyH3zwAa+88oq1SxQREZFMxKa6WzZs2MBXX33F7du38fHx\noVOnTrzxxhtcu3aNjz76iN27d1u7RBEREclEbKpHaPHixbRr146PP/44xbpx48Yxe/Zs6tSpY4XK\nREREJDOyqR6hs2fP0qpVq1TXvfPOOwQHBz/jikRERCQzs6kg5OTkRHx8fKrrNHFaREREMppNJQsP\nDw/mzp1LQkKCxfI7d+4wa9YsPDw8rFSZiIiIZEY2NUeoZ8+e9OvXj+bNm1OpUiVy5sxJTEwMx44d\nIz4+nmnTplm7RBEREclEbCoIVa9enXnz5rFkyRKOHz9ObGwsbm5uNGrUiPfff59SpUpZu0QRERHJ\nRKwehEJDQylSpIjxc7ly5RgyZIgVKxIRERF7YfU5Qm3atKF///5s2rQpxdwgERERkafJ6kGoS5cu\n/PvvvwwePJjmzZszadIkzpw5Y+2yRERExA5YPQj16NGDX3/9lWnTplGnTh1+/fVX2rVrR7du3Vi7\ndi1xcXHWLlFEREQyKavPETJ7+eWXefnll7l16xabN28mICCAUaNG8d1339GkSRNatmypy+dFREQk\nQ9lMEDLLnj07vr6++Pr6EhISwrp169i6dSurVq2iXLlyLFy40NolioiISCZhc0EouaJFi9KsWTOc\nnZ35+eefOXXqlLVLEhERkUzEJoNQbGwsmzZtYu3atQQGBuLm5kbTpk0f+HfIRERERB6HTQWhffv2\nsXbtWv744w/i4uKoVasWX3/9NY0aNSJr1qzWLk9EREQyGasHoZCQENauXcu6deu4fPky7u7uvPPO\nO7Ro0YLixYtbuzwRERHJxKwehNq0aYOjoyOvvvoqn376KZ6enjg5OVm7LBEREbEDVg9CPXr0wNfX\nlwIFCli7FBEREbEzVg9CXbt2tXYJIiIiYqesfmdpEREREWtREBIRERG7pSAkIiIidktBSEREROyW\n1SdLT58+PV3b9+nT5ylVIiIiIvbG6kFowYIFad7WwcFBQUhEREQyjNWD0K5du6xdgoiIiNgpq88R\ncnJyStO/a9eu0a9fP2uXKyIiIpmI1XuE7hcUFMT+/fu5fv26sSwpKYkTJ05w7NgxK1YmIiIimY1N\nBaHff/+dgQMHcvfuXRwcHEhKSjLW5c+fn+7du1uxOhEREclsrD40ltzcuXNp374927Ztw8XFhRUr\nVrB69Wp69uxJlSpVaNu2rbVLFBERkUzEpoLQhQsXaN26NTly5MDBwQFHR0cKFixIly5dqFy5Mt9+\n+621SxQREZFMxKaCUPKhsBw5chAZGWn83LhxY/78809rlCUiIiKZlE0FoQoVKrBw4ULi4uIoWbIk\nK1asMNYdPXrUIiiJiIiIPCmbmizduXNnBgwYwHvvvUebNm0YNGgQf//9N25ubpw5c4YmTZpYu0QR\nERHJRGwqCNWtW5elS5dSuHBhSpYsCcCGDRtISEigUaNGtG/f3soVioiISGZiU0HoyJEjVK5cGScn\nJwC8vb3x9vYG4Nq1a+zduxcvLy9rligiIiKZiE3NEerRowfR0dGprgsPD2fYsGHPuCIRERHJzGyi\nR2jw4MHAvavGxo4dS9asWVNsExwcTJYsWZ51aSIiIpKJ2UQQKl26NP/88w9w7+owBweHFNvkypWL\nzz777FmXJiIiIpmYTQShrl27AuDj48PChQvJkyePlSsSERERe2ATQchs7dq1xv+joqKIjY3Fzc2N\n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\naXBCAADQkLhUETp16pTefffdJz5cdcSIEbpw4YIBqQAAQEPlUkWovLxcLVq0+Mf3ysvLn3EiAADQ\nkLlUEWrXrp3279//xPeOHj2qDh06PONEAACgIXOpydKTJk1SdHS0Ll68qN69e8vhcOjAgQO6du2a\nsrKytH79eqMjAgCABsSlitDw4cPVqFEj7dy5U9u2bZMkpaSkqEOHDlq7dq0GDx5scEIAANCQuFQR\nkqTw8HCFh4frwYMHKikpUbNmzeTl5WV0LAAA0AC5TBG6ceOGbt68qaCgIIWEhMjb21ve3t5GxwIA\nAA2Y4UXo4cOHioqKUmZmpnNZnz599OGHH8rHx8fAZAAAoKEz/KqxXbt26eTJk5ozZ47i4+O1ePFi\nXbhwQQkJCUZHAwAADZzhRejIkSNasGCBpk+frn79+mnKlCmKiYnRDz/8oLKyslqt89KlSxo/fry+\n/PJLSdKtW7c0Z84czZo1SytXrtTDhw/rchcAAICbMrwI5efnq1evXlWW9ejRQ2VlZbpz506N11da\nWqqNGzdWWWdSUpImTpyo7du3Kzg4WGlpaU+dGwAAuD/Di1BZWZl8fX2rLLNarWrSpEmtRoQ8PDyU\nkJCggIAA57LTp09r4MCBkqQBAwYoOzv76UIDAIAGwfDJ0nXNarXKaq26W3a7XZ6enpIkf39/FRUV\nGRENAAC4GMOLkMVikcVieWbbq6ioqNHnL168WK3Pta9NGINUd5/cdXt1jfzGIr/x3H0fyF89DfU4\n1qlTp3993/AiVFFRocmTJz9WhkpLSzV9+nQ1avS/s3cWi0Xp6ek13oaXl5fsdruaNm2qwsJCtWrV\nqtr/9v/9Bz7iqHEq41R3n+rCxYsXn+n26hr5jUV+47n7PpC/+sx6HDO8CI0aNaretxEaGqpjx45p\nxIgRysjIUJ8+fep9mwAAwPUZXoRWr15dp+vLyclRYmKi8vPzZbValZGRodjYWMXGxio1NVVt2rTR\n6NGj63SbAADAPRlehOpaly5d9Nlnnz22fMuWLQakAQAArszwy+cBAACMQhECAACmRRECAACmRREC\nAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACm\nRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRREC\nAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmZTU6AADg6TliRtbLettLctTx\nOhtHf1/HawRqjxEhAABgWowIAQAM504jWtLjo1runt/MGBECAACmRRECAACmRRECAACmRRECAACm\nRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmRRECAACmxSM2AED184gEHo8AuD5GhAAAgGlR\nhAAAgGlRhAAAgGlRhAAAgGlRhAAAgGlRhAAAgGlRhAAAgGlRhAAAgGlRhAAAgGlRhAAAgGlRhAAA\ngGnxrDFIqp/nLEn186wlnrMEAKgrjAgBAADToggBAADToggBAADTYo4QgDpRH/PM6mOOmcQ8MwD/\nw4gQAAAwLYoQAAAwLYoQAAAwLYoQAAAwLYoQAAAwLa4aQ4PgTnfGlrhqCQBcBSNCAADAtChCAADA\ntChCAADAtJgjBLgA5jgBgDEYEQIAAKZFEQIAAKZlqlNj8fHxOnfunCwWi5YsWaKuXbsaHQkAABjI\nNCNCv/zyi65fv64dO3Zo1apV2rhxo9GRAACAwUxThLKzszVo0CBJ0gsvvKD79++rpKTE4FQAAMBI\nFpvNVmF0iGdh/fr16t+/v7MMzZo1S6tWrVJISIjByQAAgFFMMyIEAADwd6YpQgEBAbpz547zdWFh\noQICAgxMBAAAjGaaItSnTx9lZGRIkn777Te1atVKPj4+BqcCAABGMs3l8927d9dLL72kyMhINWrU\nSMuWLTM6EgAAMJhpJksDAAD8nWlOjQEAAPwdRQgAAJiWaeYIuZtLly5p6dKlmjp1qiZNmmR0nFrZ\ntGmTfv31VzkcDk2fPl2DBw82OlK12O12xcTE6O7du3r48KFmzJihsLAwo2PVit1u19SpUxUZGanR\no0cbHafaTp8+rZUrV6p9+/aSpA4dOrjdvL709HTt2bNHVqtVb7/9tgYMGGB0pGo7ePCgDh8+7Hyd\nk5OjzMxMAxPVzIMHD7RmzRrdv39fDx8+1MyZM9W3b1+jY9VIeXm5NmzYoEuXLsnDw0MrVqxQu3bt\njI71f/392HXr1i1FR0fL4XAoICBAMTEx8vT0NDpmFRQhF1RaWqqNGzeqV69eRkeptVOnTun333/X\njh07ZLPZ9Oabb7pNETp+/Li6dOmiiIgI5efna/78+W5bhHbs2KHmzZsbHaNWevTooQ0bNhgdo1Zs\nNpu2b9+uPXv2qLS0VNu2bXOrIjRu3DiNGzdOUuXjiX788UeDE9XMd999p5CQEM2bN0+FhYV65513\n9NVXXxkdq0YyMzNVUlKi5ORk3bhxQx9//LESEhKMjvWvnnTsSkpK0sSJEzV06FB9+umnSktL08SJ\nEw1M+ThOjbkgDw8PJSQkuPV9jl577TV99NFHkqRmzZqptLRUDofD4FTVM2zYMEVEREiSbt26pcDA\nQIMT1c6VK1d0+fJl9e/f3+goppOdna3Q0FD5+PgoICBAH3zwgdGRau3zzz/XjBkzjI5RIy1atFBx\ncbEk6Y8//lCLFi0MTlRz169f18svvyxJatu2rQoKClz+Z+iTjl2nT5/WwIEDJUkDBgxQdna2UfH+\nEUXIBVmtVjVt2tToGE+lcePG8vLykiSlpaWpf//+aty4scGpaiYyMlJRUVF67733jI5SK4mJiVq8\neLHRMWrt8uXLWrJkiWbNmqWTJ08aHadGbt68Kbvd7sz/888/Gx2pVs6fP6+goCC3+6UsPDxcBQUF\nmjBhgmbPnq2FCxcaHanGOnbsqBMnTsjhcOjq1avKy8uTzWYzOta/etKxy263O0+F+fv7q6ioyIho\n/4pTY6hXmZmZSktL0+bNm42OUmPJycnKzc1VdHS0UlJSZLFYjI5UbYcOHVK3bt30/PPPGx2lVoKD\ngzVz5kwNHTpUeXl5mjt3rlJTU+Xh4WF0tGorLi7Wf/7zHxUUFGju3LlKS0tzq++QVDlXyJ3mlj1y\n+PBhtW7dWps2bVJubq7WrVunPXv2GB2rRvr166ezZ89q9uzZ6tixo9q1a6eKCve+242r5qcIod78\n9NNP2rlzpxITE+Xr62t0nGrLycmRv7+/goKC1LlzZzkcDt27d0/+/v5GR6u2rKws5eXlKSsrS7dv\n35aHh4cCAwMVGhpqdLRqCQwM1LBhwyRVnhZ47rnndPv2bbcpdv7+/urevbusVqvatm0rb29vt/sO\nSZWnNZYuXWp0jBo7e/as+vTpI0nq3LmzioqK5HA43G5Ueu7cuc6/jx8/3u2+P5Lk5eUlu92upk2b\nqrCwUK1atTI60mM4NYZ6UVJSos2bNys+Pl5+fn5Gx6mRM2fOKCUlRZJ0584dPXjwwO3mGKxfv167\nd+/Wjh07NHbsWEVGRrpNCZIqr7jat2+fJKmoqEh37951q7lavXv31qlTp1ReXi6bzabS0lK3+w4V\nFhbK29vbrUbhHgkODta5c+ckSfn5+fLy8nK7EpSbm6u1a9dKqvyl8sUXX1SjRu53yA4NDdWxY8ck\nSRkZGc6C6koYEXJBOTk5SkxMVH5+vqxWqzIyMhQXF+dWheLo0aOy2WxVJomuWbNGrVu3NjBV9UyY\nMEHr1q3TrFmz9Oeff+r99993yx9A7iwsLExRUVHKzMxUWVmZli9f7lYH5MDAQA0ZMsQ5yXjp0qVu\n9x0qKipSy5YtjY5RK+PHj9fatWs1e/ZsORwOrVixwuhINdaxY0eVl5dr+vTp8vT0dJYiV/akY1ds\nbKxiY2OVmpqqNm3auOSpVh6xAQAATMu9fkUBAACoQxQhAABgWhQhAABgWhQhAABgWhQhAABgWlw+\nD8ClxcTE6NChQ48t9/HxUdeuXRUREaHevXs/1TbmzJmjBw8euN3dhwE8PYoQAJfXvHlz7d+/3/m6\noqJCBQUFSklJ0aJFi5SQkKC+fftWe30TJ07UokWLFBYWJkmKi4tz2dv/A6hfnBoD4PIsFosCAgKc\nf1q1aqVXXnlF69atU2BgoPNO4NVhs9l07dq1Ksv8/Pzc7s7PAOoGRQiA27JarWrfvr1u3bolSSor\nK1NSUpLeeOMN9e3bV8OHD9fy5cuVl5cnqfLZWeHh4ZKkJUuWaNy4cZIqT41FREQ41xsaGqq9e/cq\nOTlZo0eP1sCBAzVjxgzl5ORU2X5ycrJGjRqlsLAwzZ49W5cvX9aQIUOUmJj4LHYfQB2gCAFwW+Xl\n5bp69arz0S27du3S7t27tWDBAn3zzTeKj49XQUGBli1bJknq3r274uLiJFXOPdq1a9c/rvvgwYOy\n2WzavHmztm7dqjt37ig6Otr5/tdff62kpCSNHDlS+/bt0/jx47V69WqVlpbW3w4DqHPMEQLglmw2\nm7Zv366bN29qyZIlkirn/gwbNkwhISGSpKCgII0dO1ZxcXEqKipSQECAmjdvLkny9fX912dpNWnS\nxLleSRo5cqSSk5NVUlIiX19fHTp0SJ06ddK8efMkSSEhIbLb7Vq/fn197TKAekARAuDyiouLNWjQ\nIOfriooK2e12tW/fXuvWrdOAAQMkSZ6enjp8+LAyMzNVWFiov/76Sw6Hw7mOgICAam+zW7duVV4/\nmkN0//59+fr66saNG87J1o88ygHAfVCEALi85s2ba+fOnc7Xly9f1rJly5wjQI+sXr1aJ06c0Pz5\n89WzZ081bdpUx44d05YtW2q8TW9v7yqvLRaLJDmvLisuLn7sM0y4BtwPRQiAy7NYLAoODna+Dg4O\n1pgxY7R161aFhYUpKChIJSUlOn78uKZNm6YpU6Y4P1teXl4vmTw9PWW326ssKy4urpdtAag/TJYG\n4JYWLFggT09PbdiwQVLlFWMVFRXy8/NzfsbhcCg9PV2S6vw+QcHBwTp//nyVZRkZGXW6DQD1jyIE\nwC35+flp4cKFysrKUnp6ulq0aKHg4GB9//33unjxonJzc7V06VK9+uqrkqQzZ86opKREzZo1kyRl\nZ2frwoULtS5IQ4cO1YULF7R7925du3ZNR44c0ZEjR+ps/wA8GxQhAG5r1KhR6tmzp+Lj43Xv3j2t\nXbtWnp6emjFjhlasWKHXX3/dWYY++eQTpaenq1OnThoyZIhSU1O1aNGiWp86mzZtmiZPnqy9e/cq\nIiJChw8f1po1ayRVnjYD4B4sNpuN+8oDQA05HA7du3evypVoV65c0aRJkxQVFaUxY8YYmA5AdTEi\nBAC18O2332rkyJFKSUlRXl6ezp8/r7i4OLVs2bLKpf4AXBsjQgBQS1988YVSU1N18+ZN+fj4qEuX\nLpo3b546duxodDQA1UQRAgAApsWpMQAAYFoUIQAAYFoUIQAAYFoUIQAAYFoUIQAAYFoUIQAAYFr/\nBVIaO11yhV7eAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 576x396 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "2P-PSTDDZLaJ",
        "outputId": "5a60c556-9c37-40af-9afa-3d95ba3c577a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 355
        }
      },
      "source": [
        "display(example)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<img src=\"https://fivethirtyeight.com/wp-content/uploads/2017/09/mehtahickey-inconvenient-0830-1.png\" width=\"400\"/>"
            ],
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "NMEswXWh9mqw"
      },
      "source": [
        "# ASSIGNMENT\n",
        "\n",
        "Replicate the lesson code. I recommend that you [do not copy-paste](https://docs.google.com/document/d/1ubOw9B3Hfip27hF2ZFnW3a3z9xAgrUDRReOEo-FHCVs/edit).\n",
        "\n",
        "# STRETCH OPTIONS\n",
        "\n",
        "#### Reproduce another example from [FiveThityEight's shared data repository](https://data.fivethirtyeight.com/).\n",
        "\n",
        "For example:\n",
        "- [thanksgiving-2015](https://fivethirtyeight.com/features/heres-what-your-part-of-america-eats-on-thanksgiving/) (try the [`altair`](https://altair-viz.github.io/gallery/index.html#maps) library)\n",
        "- [candy-power-ranking](https://fivethirtyeight.com/features/the-ultimate-halloween-candy-power-ranking/) (try the [`statsmodels`](https://www.statsmodels.org/stable/index.html) library)\n",
        "- or another example of your choice!\n",
        "\n",
        "#### Make more charts!\n",
        "\n",
        "Choose a chart you want to make, from [Visual Vocabulary - Vega Edition](http://ft.com/vocabulary).\n",
        "\n",
        "Find the chart in an example gallery of a Python data visualization library:\n",
        "- [Seaborn](http://seaborn.pydata.org/examples/index.html)\n",
        "- [Altair](https://altair-viz.github.io/gallery/index.html)\n",
        "- [Matplotlib](https://matplotlib.org/gallery.html)\n",
        "- [Pandas](https://pandas.pydata.org/pandas-docs/stable/visualization.html)\n",
        "\n",
        "Reproduce the chart. [Optionally, try the \"Ben Franklin Method.\"](https://docs.google.com/document/d/1ubOw9B3Hfip27hF2ZFnW3a3z9xAgrUDRReOEo-FHCVs/edit) If you want, experiment and make changes.\n",
        "\n",
        "Take notes. Consider sharing your work with your cohort!\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PLzILLJ1lbAq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "%matplotlib inline\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "df = pd.read_csv('https://raw.githubusercontent.com/fivethirtyeight/data/master/mayweather-mcgregor/tweets.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hh6MUYhxlbA2",
        "colab_type": "code",
        "colab": {},
        "outputId": "07603d57-6b52-4ad1-83bf-93db6fe804fc"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>created_at</th>\n",
              "      <th>emojis</th>\n",
              "      <th>id</th>\n",
              "      <th>link</th>\n",
              "      <th>retweeted</th>\n",
              "      <th>screen_name</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-08-27 00:05:34</td>\n",
              "      <td>True</td>\n",
              "      <td>901656910939770881</td>\n",
              "      <td>https://twitter.com/statuses/901656910939770881</td>\n",
              "      <td>False</td>\n",
              "      <td>aaLiysr</td>\n",
              "      <td>Ringe çıkmadan ateş etmeye başladı 😃#McGregor ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656917281574912</td>\n",
              "      <td>https://twitter.com/statuses/901656917281574912</td>\n",
              "      <td>False</td>\n",
              "      <td>zulmafrancozaf</td>\n",
              "      <td>😲😲😲😲😲 @lalylourbet2 https://t.co/ERUGHhQINE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656917105369088</td>\n",
              "      <td>https://twitter.com/statuses/901656917105369088</td>\n",
              "      <td>False</td>\n",
              "      <td>Adriana11D</td>\n",
              "      <td>🇮🇪🇮🇪🇮🇪 💪💪#MayweathervMcgregor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656917747142657</td>\n",
              "      <td>https://twitter.com/statuses/901656917747142657</td>\n",
              "      <td>False</td>\n",
              "      <td>Nathan_Caro_</td>\n",
              "      <td>Cest partit #MayweatherMcGregor 💪🏿</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656916828594177</td>\n",
              "      <td>https://twitter.com/statuses/901656916828594177</td>\n",
              "      <td>False</td>\n",
              "      <td>sahouraxox</td>\n",
              "      <td>Low key feeling bad for ppl who payed to watch...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            created_at  emojis                  id  \\\n",
              "0  2017-08-27 00:05:34    True  901656910939770881   \n",
              "1  2017-08-27 00:05:35    True  901656917281574912   \n",
              "2  2017-08-27 00:05:35    True  901656917105369088   \n",
              "3  2017-08-27 00:05:35    True  901656917747142657   \n",
              "4  2017-08-27 00:05:35    True  901656916828594177   \n",
              "\n",
              "                                              link  retweeted     screen_name  \\\n",
              "0  https://twitter.com/statuses/901656910939770881      False         aaLiysr   \n",
              "1  https://twitter.com/statuses/901656917281574912      False  zulmafrancozaf   \n",
              "2  https://twitter.com/statuses/901656917105369088      False      Adriana11D   \n",
              "3  https://twitter.com/statuses/901656917747142657      False    Nathan_Caro_   \n",
              "4  https://twitter.com/statuses/901656916828594177      False      sahouraxox   \n",
              "\n",
              "                                                text  \n",
              "0  Ringe çıkmadan ateş etmeye başladı 😃#McGregor ...  \n",
              "1        😲😲😲😲😲 @lalylourbet2 https://t.co/ERUGHhQINE  \n",
              "2                      🇮🇪🇮🇪🇮🇪 💪💪#MayweathervMcgregor  \n",
              "3                 Cest partit #MayweatherMcGregor 💪🏿  \n",
              "4  Low key feeling bad for ppl who payed to watch...  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fI0EyN3slbBC",
        "colab_type": "code",
        "colab": {},
        "outputId": "3ec29bf6-7046-4d0d-84e1-36e2ff402661"
      },
      "source": [
        "df.dtypes"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "created_at     object\n",
              "emojis           bool\n",
              "id              int64\n",
              "link           object\n",
              "retweeted        bool\n",
              "screen_name    object\n",
              "text           object\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gluKmLqAlbBF",
        "colab_type": "code",
        "colab": {},
        "outputId": "0d8b7cb6-8802-4a3e-818d-cd1dca16f831"
      },
      "source": [
        "s = '😀'\n",
        "print('U+{:X}'.format(ord(s)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "U+1F600\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "goEc5D2albBJ",
        "colab_type": "code",
        "colab": {},
        "outputId": "34b50b99-5dd3-4b4c-bb88-8e389a95a5de"
      },
      "source": [
        "df['created_at'] = pd.to_datetime(df['created_at'])\n",
        "df['created_at'].head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0   2017-08-27 00:05:34\n",
              "1   2017-08-27 00:05:35\n",
              "2   2017-08-27 00:05:35\n",
              "3   2017-08-27 00:05:35\n",
              "4   2017-08-27 00:05:35\n",
              "Name: created_at, dtype: datetime64[ns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pl29mHJBlbBN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = df.drop(['retweeted', 'link'], axis=1)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tNzH0Q3ulbBP",
        "colab_type": "code",
        "colab": {},
        "outputId": "1350c9c9-8e36-4125-928e-8a550bb45c6c"
      },
      "source": [
        "df.head()#ensure that the two columns were dropped like I wanted"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>created_at</th>\n",
              "      <th>emojis</th>\n",
              "      <th>id</th>\n",
              "      <th>screen_name</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-08-27 00:05:34</td>\n",
              "      <td>True</td>\n",
              "      <td>901656910939770881</td>\n",
              "      <td>aaLiysr</td>\n",
              "      <td>Ringe çıkmadan ateş etmeye başladı 😃#McGregor ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656917281574912</td>\n",
              "      <td>zulmafrancozaf</td>\n",
              "      <td>😲😲😲😲😲 @lalylourbet2 https://t.co/ERUGHhQINE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656917105369088</td>\n",
              "      <td>Adriana11D</td>\n",
              "      <td>🇮🇪🇮🇪🇮🇪 💪💪#MayweathervMcgregor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656917747142657</td>\n",
              "      <td>Nathan_Caro_</td>\n",
              "      <td>Cest partit #MayweatherMcGregor 💪🏿</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-08-27 00:05:35</td>\n",
              "      <td>True</td>\n",
              "      <td>901656916828594177</td>\n",
              "      <td>sahouraxox</td>\n",
              "      <td>Low key feeling bad for ppl who payed to watch...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           created_at  emojis                  id     screen_name  \\\n",
              "0 2017-08-27 00:05:34    True  901656910939770881         aaLiysr   \n",
              "1 2017-08-27 00:05:35    True  901656917281574912  zulmafrancozaf   \n",
              "2 2017-08-27 00:05:35    True  901656917105369088      Adriana11D   \n",
              "3 2017-08-27 00:05:35    True  901656917747142657    Nathan_Caro_   \n",
              "4 2017-08-27 00:05:35    True  901656916828594177      sahouraxox   \n",
              "\n",
              "                                                text  \n",
              "0  Ringe çıkmadan ateş etmeye başladı 😃#McGregor ...  \n",
              "1        😲😲😲😲😲 @lalylourbet2 https://t.co/ERUGHhQINE  \n",
              "2                      🇮🇪🇮🇪🇮🇪 💪💪#MayweathervMcgregor  \n",
              "3                 Cest partit #MayweatherMcGregor 💪🏿  \n",
              "4  Low key feeling bad for ppl who payed to watch...  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 124
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pGvqAV10lbBR",
        "colab_type": "code",
        "colab": {},
        "outputId": "f857e763-87ed-4665-f93e-757a6af0388d"
      },
      "source": [
        "df['id'].value_counts().sum()#just seeing how many unique users there were"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12118"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NYqK4T56lbBV",
        "colab_type": "code",
        "colab": {},
        "outputId": "353e7155-a198-4a2b-d91c-520db2080736"
      },
      "source": [
        "df['emojis'].value_counts()#all of the tweets had emojis"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True    12118\n",
              "Name: emojis, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "js0nKoYMlbBY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#I need to get rid of ALL of the text in a column that is not an emoji..."
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4caikDR9lbBZ",
        "colab_type": "code",
        "colab": {},
        "outputId": "bfcf6e00-e4b2-4d92-bbac-fd45f13caeef"
      },
      "source": [
        "df['text']"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        Ringe çıkmadan ateş etmeye başladı 😃#McGregor ...\n",
              "1              😲😲😲😲😲 @lalylourbet2 https://t.co/ERUGHhQINE\n",
              "2                            🇮🇪🇮🇪🇮🇪 💪💪#MayweathervMcgregor\n",
              "3                       Cest partit #MayweatherMcGregor 💪🏿\n",
              "4        Low key feeling bad for ppl who payed to watch...\n",
              "5                                            #McGregor 👊👊👊\n",
              "6               ENFIN !!! LET S GO #McGregor !!!!!!! 🍀🍀🍀🍀🍀\n",
              "7                             #TMT #Mayweather 🥊🥊🥊🥊💰💰💰💰💰💰💰\n",
              "8        I've no idea what I'm watching.....lets do thi...\n",
              "9                        Here we go 👊🏼 #MayweatherMcGregor\n",
              "10       Justo ahora se corta el audio 😑 #MayweathervMc...\n",
              "11                  Voy Mayweather 🏅🥊 #MayweathervMcgregor\n",
              "12       @ddlovato just SLAYYEDD that #NationalAnthem Y...\n",
              "13                               #McGregor #Mayweather 👊💪📺\n",
              "14       The Notorious. 👊#MayweatherVsMcGregor https://...\n",
              "15       You can go to bed early homie. You won't be fo...\n",
              "16                                           #McGregor 😘😘😘\n",
              "17       2017. #MayweathervMcgregor fight FOMO kicked i...\n",
              "18                                            #McGregor 👌🏼\n",
              "19                    i'm rooting #Mayweather lets go 🤛🏼✊🏼\n",
              "20       McGregor's entrance though! 🇮🇪🇮🇪🇮🇪💯💯💯#Mayweath...\n",
              "21                               #mayweather for the win🙌🏼\n",
              "22       Let's go Conor mcgregor.  🇮🇪 #MayweatherVsMcGr...\n",
              "23                  Demi Lovato tho 👅 #MayweathervMcgregor\n",
              "24       Hora cero !!! #ConorMcGregor 👊👊\\n#MayweathervM...\n",
              "25       Espero que después de tanto show den una buena...\n",
              "26       Just want 2drop my 🔮Miss Cleo 🔮prediction 🔥 @T...\n",
              "27       Conor really does walk like that. 😂😂😂 Sexy ass...\n",
              "28              Let's go Conor 🇮🇪👊🏻🇮🇪 #MayweathervMcgregor\n",
              "29       Demi 💙abre a essa Battle c leveza pq daqui a p...\n",
              "                               ...                        \n",
              "12088    Lo único que vale la pena después de esta pele...\n",
              "12089                        🤦🏾‍♂️ https://t.co/AnkUDBarYX\n",
              "12090    \"I turned him into a Mexican\" 😂😂😂😂 #ImDead #Me...\n",
              "12091    #MayweathervMcgregor fuck my life mcgregor los...\n",
              "12092    #MayweathervMcgregor alright, let's have a rem...\n",
              "12093        كيف خسر #Mcgregor 😂🤜🏿 https://t.co/SQ8CdxjVdd\n",
              "12094    Thanks to all those streaming the fight on Per...\n",
              "12095                        😂😂😂😂😂 https://t.co/UQfmViUFyk\n",
              "12096                    Forever a champion 🇮🇪🇮🇪 #McGregor\n",
              "12097        I'M CRYYYYING DAWG😂😭😭 https://t.co/HufTp6Arux\n",
              "12098    Final dance!🤘🏿 #MayweathervMcGregor https://t....\n",
              "12099    Why would they expect someone who doesn't even...\n",
              "12100    Lots of respect to @TheNotoriousMMA for challe...\n",
              "12101    Lmao so now you realize McGregor isn't a boxer...\n",
              "12102    @TheNotoriousMMA Congrats for lasting 10 round...\n",
              "12103    Just take the \"L\" you don't know shit 😂 https:...\n",
              "12104    50 fights, 50 wins. Absolute legend! Mayweathe...\n",
              "12105    You killed the National anthem today it was th...\n",
              "12106    \"What the fook happened??\"🤣🤣💢🥊#whatthefookhapp...\n",
              "12107    شكراً جداً ع الـ fight الممتع ده يا شباب والله...\n",
              "12108    And just as the movie ended with a boxer victo...\n",
              "12109    Mcgregor baby you got me all the way fucked up...\n",
              "12110    Great fight between 2 big mouth fighters 🤘🏼#Ma...\n",
              "12111    #McGregor stepped in the boxing ring so 👏👏👏 bu...\n",
              "12112    👏🏻THIS 👏🏻IS 👏🏻FAKE 👏🏻 NEWS👏🏻 https://t.co/JTDa...\n",
              "12113    I should have become a golfer 👀 https://t.co/I...\n",
              "12114                           😂🔫 https://t.co/VmsbbKmxRc\n",
              "12115                😂😂😂😂😂😂😂 rs yo https://t.co/UgMn2HwX9X\n",
              "12116    Money Mayweather wit da dub!!🥊💸#TMT#TKO#Maywea...\n",
              "12117    Brilliant fight,🥊for a novice to go 9 rounds h...\n",
              "Name: text, Length: 12118, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 126
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O9MdEKE0lbBj",
        "colab_type": "code",
        "colab": {},
        "outputId": "530e6dd7-0c48-4838-80c5-b3612045e9bb"
      },
      "source": [
        "s = '😀'\n",
        "t = '😂'\n",
        "u = '🤣'\n",
        "v = '🇮'\n",
        "w = '🇪'\n",
        "x = '🍀'\n",
        "print('U+{:X}'.format(ord(s)))\n",
        "print('U+{:X}'.format(ord(t)))\n",
        "print('U+{:X}'.format(ord(u)))\n",
        "print('U+{:X}'.format(ord(v)))\n",
        "print('U+{:X}'.format(ord(w)))\n",
        "print('U+{:X}'.format(ord(x)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "U+1F600\n",
            "U+1F602\n",
            "U+1F923\n",
            "U+1F1EE\n",
            "U+1F1EA\n",
            "U+1F340\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Dh3jNZKZlbBm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}